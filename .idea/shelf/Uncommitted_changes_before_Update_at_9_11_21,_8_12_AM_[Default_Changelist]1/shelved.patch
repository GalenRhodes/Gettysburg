Index: Tests/GettysburgTests/SAXTestHandler.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/************************************************************************//**\n *     PROJECT: Gettysburg\n *    FILENAME: SAXTestHandler.swift\n *         IDE: AppCode\n *      AUTHOR: Galen Rhodes\n *        DATE: 1/18/21\n *\n * Copyright Â© 2021 Galen Rhodes. All rights reserved.\n *\n * Permission to use, copy, modify, and distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *//************************************************************************/\n\nimport Foundation\nimport Rubicon\n@testable import Gettysburg\n\nclass SAXTestHandler: SAXHandler {\n    func beginDocument(_ parser: SAXParser) {\n        /* TODO: Implement me... */\n    }\n\n    func endDocument(_ parser: SAXParser) {\n        /* TODO: Implement me... */\n    }\n\n    func dtdInternalDocType(_ parser: SAXParser, elementName elemName: String) {\n        /* TODO: Implement me... */\n    }\n\n    func dtdExternalDocType(_ parser: SAXParser, elementName elemName: String, publicId: String?, systemId: String) {\n        /* TODO: Implement me... */\n    }\n\n    func dtdInternalEntityDecl(_ parser: SAXParser, name: String, type: SAXEntityType, content: String) {\n        /* TODO: Implement me... */\n    }\n\n    func dtdExternalEntityDecl(_ parser: SAXParser, name: String, type: SAXEntityType, publicId: String?, systemId: String) {\n        /* TODO: Implement me... */\n    }\n\n    func dtdUnparsedEntityDecl(_ parser: SAXParser, name: String, publicId: String?, systemId: String, notation: String) {\n        /* TODO: Implement me... */\n    }\n\n    func dtdNotationDecl(_ parser: SAXParser, name: String, publicId: String?, systemId: String?) {\n        /* TODO: Implement me... */\n    }\n\n    func dtdElementDecl(_ parser: SAXParser, name: String, allowedContent: SAXElementAllowedContent, content: SAXDTDElemContList?) {\n        print(\"========================================================================================================================\")\n        /* TODO: Implement me... */\n    }\n\n    func dtdAttributeDecl(_ parser: SAXParser, name: String, elementName: String, type: SAXAttributeType, enumList: [String], defaultType: SAXAttributeDefaultType, defaultValue: String?) {\n        /* TODO: Implement me... */\n    }\n\n    func comment(_ parser: SAXParser, content: String) {\n        /* TODO: Implement me... */\n    }\n\n    func text(_ parser: SAXParser, content: String) {\n        /* TODO: Implement me... */\n    }\n\n    func cdataSection(_ parser: SAXParser, content: String) {\n        /* TODO: Implement me... */\n    }\n\n    func resolveEntity(_ parser: SAXParser, publicId: String?, systemId: String) -> InputStream? {\n        fatalError(\"resolveEntity(_:publicId:systemId:) has not been implemented\")\n        /* TODO: Implement me... */\n    }\n\n    func beginPrefixMapping(_ parser: SAXParser, mapping: NSMapping) {\n        /* TODO: Implement me... */\n    }\n\n    func endPrefixMapping(_ parser: SAXParser, prefix: String) {\n        /* TODO: Implement me... */\n    }\n\n    func beginElement(_ parser: SAXParser, name: SAXNSName, attributes: SAXRawAttribList) {\n        /* TODO: Implement me... */\n    }\n\n    func endElement(_ parser: SAXParser, name: SAXNSName) {\n        /* TODO: Implement me... */\n    }\n\n    func getEntity(_ parser: SAXParser, name: String) -> Any? {\n        fatalError(\"getEntity(_:name:) has not been implemented\")\n        /* TODO: Implement me... */\n    }\n\n    func getParameterEntity(_ parser: SAXParser, name: String) -> Any? {\n        return nil\n        /* TODO: Implement me... */\n    }\n\n    func processingInstruction(_ parser: SAXParser, target: String, data: String) {\n        /* TODO: Implement me... */\n    }\n\n    func handleError(_ parser: SAXParser, error: Error) -> Bool {\n        print(\"ERROR: \\(error)\")\n        return true\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tests/GettysburgTests/SAXTestHandler.swift b/Tests/GettysburgTests/SAXTestHandler.swift
--- a/Tests/GettysburgTests/SAXTestHandler.swift	
+++ b/Tests/GettysburgTests/SAXTestHandler.swift	
@@ -58,7 +58,6 @@
     }
 
     func dtdElementDecl(_ parser: SAXParser, name: String, allowedContent: SAXElementAllowedContent, content: SAXDTDElemContList?) {
-        print("========================================================================================================================")
         /* TODO: Implement me... */
     }
 
Index: .idea/Gettysburg.iml
===================================================================
diff --git a/.idea/Gettysburg.iml b/.idea/Gettysburg.iml
deleted file mode 100644
--- a/.idea/Gettysburg.iml	
+++ /dev/null	
@@ -1,2 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module classpath="AppCode" external.linked.project.id="Gettysburg" external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$" external.system.id="SPM" type="CIDR_MODULE" version="4" />
\ No newline at end of file
Index: Tests/GettysburgTests/GettysburgTests.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n//  GettysburgTests.swift\n//  GettysburgTests\n//\n//  Created by Galen Rhodes on 11/7/20.\n//\n\nimport XCTest\nimport Rubicon\n@testable import Gettysburg\n\npublic class GettysburgTests: XCTestCase {\n\n    let testDataDir: String = \"Tests/GettysburgTests/TestData\"\n    #if !os(macOS) || os(tvOS) || os(iOS) || os(watchOS)\n        public static var allTests: [(String, (GettysburgTests) -> () throws -> Void)] {\n            [ (\"testSAXSimpleIConvCharInputStream\", testSAXSimpleIConvCharInputStream), (\"testSAXParser\", testSAXParser), ]\n        }\n    #endif\n\n    public override func setUpWithError() throws {}\n\n    public override func tearDownWithError() throws {}\n\n    func testSAXSimpleIConvCharInputStream() throws {\n        do {\n            let filename = \"\\(testDataDir)/Test_UTF-8.xml\"\n            let fileUrl  = GetFileURL(filename: filename)\n\n            nDebug(.In, \"File URL: \\\"\\(fileUrl.absoluteString)\\\"\")\n            guard let inputStream = MarkInputStream(url: fileUrl) else { XCTFail(\"Could not open file \\\"\\(fileUrl.absoluteString)\\\"\"); return }\n            nDebug(.None, \"File Opened: \\\"\\(fileUrl.absoluteString)\\\"\")\n            let encodingName = try hardGuess(\"UTF-8\", inputStream)\n            nDebug(.Out, \"Encoding Name: \\\"\\(encodingName)\\\"\")\n        }\n        catch let e {\n            XCTFail(\"ERROR: \\(e)\")\n        }\n    }\n\n    func testSAXParser() throws {\n        nDebug(.In, \"Starting: testSAXParser\")\n        defer { nDebug(.Out, \"Ending: testSAXParser\") }\n        do {\n            let filename = \"\\(testDataDir)/Test_UTF-8.xml\"\n            let fileUrl  = GetFileURL(filename: filename)\n\n            nDebug(.None, \"File URL: \\\"\\(fileUrl)\\\"\")\n            guard let inputStream = MarkInputStream(url: fileUrl) else { XCTFail(\"Could not open file \\\"\\(fileUrl)\\\"\"); return }\n\n            let handler: SAXTestHandler = SAXTestHandler()\n            let parser:  SAXParser      = try SAXParser(inputStream: inputStream, url: fileUrl, handler: handler)\n            nDebug(.None, \"Beginning Parse...\")\n            try parser.parse()\n        }\n        catch let e {\n            XCTFail(\"ERROR: \\(e.localizedDescription)\")\n        }\n    }\n\n    //    func testPerformanceExample() throws {\n    //        // This is an example of a performance test case.\n    //        self.measure {\n    //            // Put the code you want to measure the time of here.\n    //        }\n    //    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tests/GettysburgTests/GettysburgTests.swift b/Tests/GettysburgTests/GettysburgTests.swift
--- a/Tests/GettysburgTests/GettysburgTests.swift	
+++ b/Tests/GettysburgTests/GettysburgTests.swift	
@@ -14,7 +14,7 @@
     let testDataDir: String = "Tests/GettysburgTests/TestData"
     #if !os(macOS) || os(tvOS) || os(iOS) || os(watchOS)
         public static var allTests: [(String, (GettysburgTests) -> () throws -> Void)] {
-            [ ("testSAXSimpleIConvCharInputStream", testSAXSimpleIConvCharInputStream), ("testSAXParser", testSAXParser), ]
+            [ ("testSAXSimpleIConvCharInputStream", testSAXSimpleIConvCharInputStream), ]
         }
     #endif
 
@@ -22,41 +22,7 @@
 
     public override func tearDownWithError() throws {}
 
-    func testSAXSimpleIConvCharInputStream() throws {
-        do {
-            let filename = "\(testDataDir)/Test_UTF-8.xml"
-            let fileUrl  = GetFileURL(filename: filename)
-
-            nDebug(.In, "File URL: \"\(fileUrl.absoluteString)\"")
-            guard let inputStream = MarkInputStream(url: fileUrl) else { XCTFail("Could not open file \"\(fileUrl.absoluteString)\""); return }
-            nDebug(.None, "File Opened: \"\(fileUrl.absoluteString)\"")
-            let encodingName = try hardGuess("UTF-8", inputStream)
-            nDebug(.Out, "Encoding Name: \"\(encodingName)\"")
-        }
-        catch let e {
-            XCTFail("ERROR: \(e)")
-        }
-    }
-
-    func testSAXParser() throws {
-        nDebug(.In, "Starting: testSAXParser")
-        defer { nDebug(.Out, "Ending: testSAXParser") }
-        do {
-            let filename = "\(testDataDir)/Test_UTF-8.xml"
-            let fileUrl  = GetFileURL(filename: filename)
-
-            nDebug(.None, "File URL: \"\(fileUrl)\"")
-            guard let inputStream = MarkInputStream(url: fileUrl) else { XCTFail("Could not open file \"\(fileUrl)\""); return }
-
-            let handler: SAXTestHandler = SAXTestHandler()
-            let parser:  SAXParser      = try SAXParser(inputStream: inputStream, url: fileUrl, handler: handler)
-            nDebug(.None, "Beginning Parse...")
-            try parser.parse()
-        }
-        catch let e {
-            XCTFail("ERROR: \(e.localizedDescription)")
-        }
-    }
+    func testSAXSimpleIConvCharInputStream() throws {}
 
     //    func testPerformanceExample() throws {
     //        // This is an example of a performance test case.
Index: Gettysburg.xcodeproj/project.pbxproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// !$*UTF8*$!\n{\n\tarchiveVersion = 1;\n\tclasses = {\n\t};\n\tobjectVersion = 52;\n\tobjects = {\n\n/* Begin PBXAggregateTarget section */\n\t\t83CFA60F255735DE005498FC /* All Gettysburg */ = {\n\t\t\tisa = PBXAggregateTarget;\n\t\t\tbuildConfigurationList = 83CFA612255735DE005498FC /* Build configuration list for PBXAggregateTarget \"All Gettysburg\" */;\n\t\t\tbuildPhases = (\n\t\t\t);\n\t\t\tdependencies = (\n\t\t\t\t83CFA61825573611005498FC /* PBXTargetDependency */,\n\t\t\t\t83CFA61A25573616005498FC /* PBXTargetDependency */,\n\t\t\t\t83CFA61C25573619005498FC /* PBXTargetDependency */,\n\t\t\t\t8356BB4325D038CC00E41DFC /* PBXTargetDependency */,\n\t\t\t);\n\t\t\tname = \"All Gettysburg\";\n\t\t\tproductName = \"All Gettysburg\";\n\t\t};\n/* End PBXAggregateTarget section */\n\n/* Begin PBXBuildFile section */\n\t\t1117D04D745A95855B838B79 /* RegexTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D464877EF4F09607BFED /* RegexTests.swift */; };\n\t\t1117D0A4FF07F25A60BC18D2 /* SAXHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D3A1E6C4AA50C5538A81 /* SAXHandler.swift */; };\n\t\t1117D15FB85592BBFC4F222F /* SAXDTDElemCont.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D8F099166931E1797992 /* SAXDTDElemCont.swift */; };\n\t\t1117D1D38E14C53743B54C9A /* SAXParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DA141FDE8E30089588F4 /* SAXParser.swift */; };\n\t\t1117D22191E359EA24C6A826 /* Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DFB20447E8856673449D /* Extensions.swift */; };\n\t\t1117D2B649D71DC8F4CA3AE4 /* SAXNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D0A6C96846F7C7231BD7 /* SAXNode.swift */; };\n\t\t1117D3A334D5DC0A4F440318 /* SAXCharInputStreamStack.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D71442C4704A02A0D9C9 /* SAXCharInputStreamStack.swift */; };\n\t\t1117D5351D9A90E67CC0D80B /* KVPair.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DAD447FF55D3AE9410E2 /* KVPair.swift */; };\n\t\t1117D64821E98B014C70A0F5 /* SAXCharInputStream.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DF9043F6934F4BEB5B05 /* SAXCharInputStream.swift */; };\n\t\t1117D68B62FFD1AA32F00AEB /* SAXTestHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DEB2BBDD656C51384346 /* SAXTestHandler.swift */; };\n\t\t1117D8AD7D6CA03FDCE996C6 /* SAXNSName.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DD6B0C35FA501F6465DF /* SAXNSName.swift */; };\n\t\t1117D91388446226B32F9AA1 /* Tools.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D44F455A6E1F051E1FE7 /* Tools.swift */; };\n\t\t1117DA9DA3ACFB977CAA77CA /* CharacterSets.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DF67151CBCFC4806850A /* CharacterSets.swift */; };\n\t\t1117DAE28F5216597168750E /* SAXError.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D597EAA818B7614CEAEF /* SAXError.swift */; };\n\t\t1117DBACBBB748A8639285FD /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DB804342BF77458B8663 /* main.swift */; };\n\t\t1117DC728363250D1EB182AB /* SAXAttribute.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D4A60F6A6CF727D7FDC1 /* SAXAttribute.swift */; };\n\t\t1117DD52BDA82EF3D833AEE7 /* Enums.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D823F398AB0E260CA6A8 /* Enums.swift */; };\n\t\t1117DDAABC5C2559C3E58075 /* Gettysburg.h in Headers */ = {isa = PBXBuildFile; fileRef = 1117DA52094C2ABAE3EA2EBA /* Gettysburg.h */; settings = {ATTRIBUTES = (Public, ); }; };\n\t\t1117DE439389356B24FA9CF8 /* XMLDeclData.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117DC7646A5D899AD4EA50E /* XMLDeclData.swift */; };\n\t\t1117DEBC95E030F734C09CC3 /* SAXElement.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D2073D1FB2038D3403D3 /* SAXElement.swift */; };\n\t\t830E3C952631AC0600F3835F /* Rubicon in Frameworks */ = {isa = PBXBuildFile; productRef = 83A6F52125C476F100C95BE8 /* Rubicon */; };\n\t\t830E3C962631AC0600F3835F /* PGDocFixer in Frameworks */ = {isa = PBXBuildFile; productRef = 83CFA5E22556E70C005498FC /* PGDocFixer */; };\n\t\t830E3C972631AC0600F3835F /* Rubicon in Frameworks */ = {isa = PBXBuildFile; productRef = 8356BB2625D0378F00E41DFC /* Rubicon */; };\n\t\t8356BB3C25D038AA00E41DFC /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D86804A3FA8399671C13 /* main.swift */; };\n\t\t8356BB4425D03A8100E41DFC /* libiconv.tbd in Frameworks */ = {isa = PBXBuildFile; fileRef = 83DD3B8425B9CBEE0083BC1C /* libiconv.tbd */; };\n\t\t83CFA5BA2556E331005498FC /* Gettysburg.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 83CFA5B02556E331005498FC /* Gettysburg.framework */; };\n\t\t83CFA5BF2556E331005498FC /* GettysburgTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 83CFA5BE2556E331005498FC /* GettysburgTests.swift */; };\n\t\t83F8D67425C4816A004DD445 /* libiconv.tbd in Frameworks */ = {isa = PBXBuildFile; fileRef = 83DD3B8425B9CBEE0083BC1C /* libiconv.tbd */; };\n/* End PBXBuildFile section */\n\n/* Begin PBXContainerItemProxy section */\n\t\t8356BB4225D038CC00E41DFC /* PBXContainerItemProxy */ = {\n\t\t\tisa = PBXContainerItemProxy;\n\t\t\tcontainerPortal = 83CFA5A72556E331005498FC /* Project object */;\n\t\t\tproxyType = 1;\n\t\t\tremoteGlobalIDString = 8356BB1925D0375F00E41DFC;\n\t\t\tremoteInfo = EntityTool;\n\t\t};\n\t\t83CFA5BB2556E331005498FC /* PBXContainerItemProxy */ = {\n\t\t\tisa = PBXContainerItemProxy;\n\t\t\tcontainerPortal = 83CFA5A72556E331005498FC /* Project object */;\n\t\t\tproxyType = 1;\n\t\t\tremoteGlobalIDString = 83CFA5AF2556E331005498FC;\n\t\t\tremoteInfo = Gettysburg;\n\t\t};\n\t\t83CFA61725573611005498FC /* PBXContainerItemProxy */ = {\n\t\t\tisa = PBXContainerItemProxy;\n\t\t\tcontainerPortal = 83CFA5A72556E331005498FC /* Project object */;\n\t\t\tproxyType = 1;\n\t\t\tremoteGlobalIDString = 83CFA5AF2556E331005498FC;\n\t\t\tremoteInfo = Gettysburg;\n\t\t};\n\t\t83CFA61925573616005498FC /* PBXContainerItemProxy */ = {\n\t\t\tisa = PBXContainerItemProxy;\n\t\t\tcontainerPortal = 83CFA5A72556E331005498FC /* Project object */;\n\t\t\tproxyType = 1;\n\t\t\tremoteGlobalIDString = 83CFA5B82556E331005498FC;\n\t\t\tremoteInfo = GettysburgTests;\n\t\t};\n\t\t83CFA61B25573619005498FC /* PBXContainerItemProxy */ = {\n\t\t\tisa = PBXContainerItemProxy;\n\t\t\tcontainerPortal = 83CFA5A72556E331005498FC /* Project object */;\n\t\t\tproxyType = 1;\n\t\t\tremoteGlobalIDString = 83CFA5D62556E6C4005498FC;\n\t\t\tremoteInfo = DocFixer;\n\t\t};\n\t\t83CFA61D25573638005498FC /* PBXContainerItemProxy */ = {\n\t\t\tisa = PBXContainerItemProxy;\n\t\t\tcontainerPortal = 83CFA5A72556E331005498FC /* Project object */;\n\t\t\tproxyType = 1;\n\t\t\tremoteGlobalIDString = 83CFA5AF2556E331005498FC;\n\t\t\tremoteInfo = Gettysburg;\n\t\t};\n/* End PBXContainerItemProxy section */\n\n/* Begin PBXCopyFilesBuildPhase section */\n\t\t8356BB1825D0375F00E41DFC /* CopyFiles */ = {\n\t\t\tisa = PBXCopyFilesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tdstPath = /usr/share/man/man1/;\n\t\t\tdstSubfolderSpec = 0;\n\t\t\tfiles = (\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 1;\n\t\t};\n\t\t83CFA5D52556E6C4005498FC /* CopyFiles */ = {\n\t\t\tisa = PBXCopyFilesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tdstPath = /usr/share/man/man1/;\n\t\t\tdstSubfolderSpec = 0;\n\t\t\tfiles = (\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 1;\n\t\t};\n\t\t83EC590F266785E200936213 /* Embed Frameworks */ = {\n\t\t\tisa = PBXCopyFilesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tdstPath = \"\";\n\t\t\tdstSubfolderSpec = 10;\n\t\t\tfiles = (\n\t\t\t);\n\t\t\tname = \"Embed Frameworks\";\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n/* End PBXCopyFilesBuildPhase section */\n\n/* Begin PBXFileReference section */\n\t\t1117D07930C31B9EB322C3C2 /* Test_UTF-16BE.xml */ = {isa = PBXFileReference; fileEncoding = 2415919360; lastKnownFileType = text.xml; path = \"Test_UTF-16BE.xml\"; sourceTree = \"<group>\"; };\n\t\t1117D0A6C96846F7C7231BD7 /* SAXNode.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXNode.swift; sourceTree = \"<group>\"; };\n\t\t1117D140D7C3EAE052E01D31 /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.info; path = Info.plist; sourceTree = \"<group>\"; };\n\t\t1117D173F94712C34C49032A /* Test_UTF-16BE_ext.xml */ = {isa = PBXFileReference; fileEncoding = 2415919360; lastKnownFileType = text.xml; path = \"Test_UTF-16BE_ext.xml\"; sourceTree = \"<group>\"; };\n\t\t1117D2073D1FB2038D3403D3 /* SAXElement.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXElement.swift; sourceTree = \"<group>\"; };\n\t\t1117D24C2AC342935E43EA54 /* Test.dtd */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = Test.dtd; sourceTree = \"<group>\"; };\n\t\t1117D2654B632662DADD7449 /* Test_WINDOWS-1252.xml */ = {isa = PBXFileReference; fileEncoding = 12; lastKnownFileType = text.xml; path = \"Test_WINDOWS-1252.xml\"; sourceTree = \"<group>\"; };\n\t\t1117D2AD350A984772DC23C9 /* XML_Entities_Data_A.csv */ = {isa = PBXFileReference; lastKnownFileType = file.csv; path = XML_Entities_Data_A.csv; sourceTree = \"<group>\"; };\n\t\t1117D3250DFFCE3E85ABD6E2 /* .jazzy.yaml */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.yaml; path = .jazzy.yaml; sourceTree = \"<group>\"; };\n\t\t1117D32792ADADA24039E4BC /* README.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = \"<group>\"; };\n\t\t1117D34903A4804B6646574A /* LICENSE */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = LICENSE; sourceTree = \"<group>\"; };\n\t\t1117D39A50E13D704326AF0E /* Test_UTF-8.xml */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = \"Test_UTF-8.xml\"; sourceTree = \"<group>\"; };\n\t\t1117D3A1E6C4AA50C5538A81 /* SAXHandler.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXHandler.swift; sourceTree = \"<group>\"; };\n\t\t1117D44F455A6E1F051E1FE7 /* Tools.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Tools.swift; sourceTree = \"<group>\"; };\n\t\t1117D464877EF4F09607BFED /* RegexTests.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = RegexTests.swift; sourceTree = \"<group>\"; };\n\t\t1117D49E8D02446DD4DCA48F /* XML_Entities_Data.csv */ = {isa = PBXFileReference; lastKnownFileType = file.csv; path = XML_Entities_Data.csv; sourceTree = \"<group>\"; };\n\t\t1117D4A60F6A6CF727D7FDC1 /* SAXAttribute.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXAttribute.swift; sourceTree = \"<group>\"; };\n\t\t1117D513D9FDF90E82E5D1D1 /* Test_UTF-8_ext.dtd */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = \"Test_UTF-8_ext.dtd\"; sourceTree = \"<group>\"; };\n\t\t1117D597EAA818B7614CEAEF /* SAXError.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXError.swift; sourceTree = \"<group>\"; };\n\t\t1117D62B33D6FEF9D67D50E6 /* Test_UTF-32LE.xml */ = {isa = PBXFileReference; fileEncoding = 2617245952; lastKnownFileType = text.xml; path = \"Test_UTF-32LE.xml\"; sourceTree = \"<group>\"; };\n\t\t1117D71442C4704A02A0D9C9 /* SAXCharInputStreamStack.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXCharInputStreamStack.swift; sourceTree = \"<group>\"; };\n\t\t1117D7BD3C4A2B65CD16265F /* compname.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = compname.txt; sourceTree = \"<group>\"; };\n\t\t1117D7BF1803856C4213CB5E /* Test.xml */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = Test.xml; sourceTree = \"<group>\"; };\n\t\t1117D823F398AB0E260CA6A8 /* Enums.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Enums.swift; sourceTree = \"<group>\"; };\n\t\t1117D86804A3FA8399671C13 /* main.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = \"<group>\"; };\n\t\t1117D8C36782AC8D094246EE /* Test_UTF-16LE_ext.dtd */ = {isa = PBXFileReference; fileEncoding = 2483028224; lastKnownFileType = text.xml; path = \"Test_UTF-16LE_ext.dtd\"; sourceTree = \"<group>\"; };\n\t\t1117D8F099166931E1797992 /* SAXDTDElemCont.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXDTDElemCont.swift; sourceTree = \"<group>\"; };\n\t\t1117D9BAFC548A58FAF127F5 /* Test3.xml */ = {isa = PBXFileReference; fileEncoding = 2483028224; lastKnownFileType = text.xml; path = Test3.xml; sourceTree = \"<group>\"; };\n\t\t1117DA00775621297FDDF090 /* Test4.xml */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = Test4.xml; sourceTree = \"<group>\"; };\n\t\t1117DA141FDE8E30089588F4 /* SAXParser.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXParser.swift; sourceTree = \"<group>\"; };\n\t\t1117DA1BA1656B061F4F54F0 /* Test2.xml */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = Test2.xml; sourceTree = \"<group>\"; };\n\t\t1117DA52094C2ABAE3EA2EBA /* Gettysburg.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Gettysburg.h; sourceTree = \"<group>\"; };\n\t\t1117DAD447FF55D3AE9410E2 /* KVPair.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = KVPair.swift; sourceTree = \"<group>\"; };\n\t\t1117DB804342BF77458B8663 /* main.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = \"<group>\"; };\n\t\t1117DC6CE7526681197F1C19 /* Test_UTF-8_ext.xml */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = \"Test_UTF-8_ext.xml\"; sourceTree = \"<group>\"; };\n\t\t1117DC7646A5D899AD4EA50E /* XMLDeclData.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = XMLDeclData.swift; sourceTree = \"<group>\"; };\n\t\t1117DD5AFC911B2020139DDF /* LinuxMain.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = LinuxMain.swift; sourceTree = \"<group>\"; };\n\t\t1117DD6B0C35FA501F6465DF /* SAXNSName.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXNSName.swift; sourceTree = \"<group>\"; };\n\t\t1117DEB2BBDD656C51384346 /* SAXTestHandler.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXTestHandler.swift; sourceTree = \"<group>\"; };\n\t\t1117DEC96369491CED3F9649 /* Package.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Package.swift; sourceTree = \"<group>\"; };\n\t\t1117DF25C968B209A3179FBE /* .gitignore */ = {isa = PBXFileReference; lastKnownFileType = file.gitignore; path = .gitignore; sourceTree = \"<group>\"; };\n\t\t1117DF67151CBCFC4806850A /* CharacterSets.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = CharacterSets.swift; sourceTree = \"<group>\"; };\n\t\t1117DF9043F6934F4BEB5B05 /* SAXCharInputStream.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SAXCharInputStream.swift; sourceTree = \"<group>\"; };\n\t\t1117DF9FFB9A6409B0562E05 /* EntityRegexPatternTest.pdf */ = {isa = PBXFileReference; lastKnownFileType = image.pdf; path = EntityRegexPatternTest.pdf; sourceTree = \"<group>\"; };\n\t\t1117DFB20447E8856673449D /* Extensions.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Extensions.swift; sourceTree = \"<group>\"; };\n\t\t8356BB1A25D0375F00E41DFC /* EntityTool */ = {isa = PBXFileReference; explicitFileType = \"compiled.mach-o.executable\"; includeInIndex = 0; path = EntityTool; sourceTree = BUILT_PRODUCTS_DIR; };\n\t\t83CFA5B02556E331005498FC /* Gettysburg.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Gettysburg.framework; sourceTree = BUILT_PRODUCTS_DIR; };\n\t\t83CFA5B92556E331005498FC /* GettysburgTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = GettysburgTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };\n\t\t83CFA5BE2556E331005498FC /* GettysburgTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GettysburgTests.swift; sourceTree = \"<group>\"; };\n\t\t83CFA5C02556E331005498FC /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = \"<group>\"; };\n\t\t83CFA5D72556E6C4005498FC /* DocFixer */ = {isa = PBXFileReference; explicitFileType = \"compiled.mach-o.executable\"; includeInIndex = 0; path = DocFixer; sourceTree = BUILT_PRODUCTS_DIR; };\n\t\t83DD3B8425B9CBEE0083BC1C /* libiconv.tbd */ = {isa = PBXFileReference; lastKnownFileType = \"sourcecode.text-based-dylib-definition\"; name = libiconv.tbd; path = usr/lib/libiconv.tbd; sourceTree = SDKROOT; };\n/* End PBXFileReference section */\n\n/* Begin PBXFrameworksBuildPhase section */\n\t\t8356BB1725D0375F00E41DFC /* Frameworks */ = {\n\t\t\tisa = PBXFrameworksBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t8356BB4425D03A8100E41DFC /* libiconv.tbd in Frameworks */,\n\t\t\t\t830E3C972631AC0600F3835F /* Rubicon in Frameworks */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n\t\t83CFA5AD2556E331005498FC /* Frameworks */ = {\n\t\t\tisa = PBXFrameworksBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t83F8D67425C4816A004DD445 /* libiconv.tbd in Frameworks */,\n\t\t\t\t830E3C952631AC0600F3835F /* Rubicon in Frameworks */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n\t\t83CFA5B62556E331005498FC /* Frameworks */ = {\n\t\t\tisa = PBXFrameworksBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t83CFA5BA2556E331005498FC /* Gettysburg.framework in Frameworks */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n\t\t83CFA5D42556E6C4005498FC /* Frameworks */ = {\n\t\t\tisa = PBXFrameworksBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t830E3C962631AC0600F3835F /* PGDocFixer in Frameworks */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n/* End PBXFrameworksBuildPhase section */\n\n/* Begin PBXGroup section */\n\t\t1117D1A63D2BE088AFE1141A /* Parser */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117DAD447FF55D3AE9410E2 /* KVPair.swift */,\n\t\t\t\t1117DC7646A5D899AD4EA50E /* XMLDeclData.swift */,\n\t\t\t);\n\t\t\tpath = Parser;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117D1D1CA404704C027B264 /* Misc */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117DFB20447E8856673449D /* Extensions.swift */,\n\t\t\t\t1117D823F398AB0E260CA6A8 /* Enums.swift */,\n\t\t\t\t1117D597EAA818B7614CEAEF /* SAXError.swift */,\n\t\t\t\t1117D44F455A6E1F051E1FE7 /* Tools.swift */,\n\t\t\t\t1117DD6B0C35FA501F6465DF /* SAXNSName.swift */,\n\t\t\t);\n\t\t\tpath = Misc;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117D2EC0E5DD8292487BE6B /* Other */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117DA52094C2ABAE3EA2EBA /* Gettysburg.h */,\n\t\t\t\t1117D140D7C3EAE052E01D31 /* Info.plist */,\n\t\t\t);\n\t\t\tname = Other;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117D31EACA76F49515CDEE8 /* IO */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117D71442C4704A02A0D9C9 /* SAXCharInputStreamStack.swift */,\n\t\t\t\t1117DF9043F6934F4BEB5B05 /* SAXCharInputStream.swift */,\n\t\t\t);\n\t\t\tpath = IO;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117D354C456D6060A117C7E /* Resources */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117D49E8D02446DD4DCA48F /* XML_Entities_Data.csv */,\n\t\t\t\t1117D2AD350A984772DC23C9 /* XML_Entities_Data_A.csv */,\n\t\t\t\t1117DF9FFB9A6409B0562E05 /* EntityRegexPatternTest.pdf */,\n\t\t\t);\n\t\t\tpath = Resources;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117D557776ABCAF0E334CE5 /* Validation */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117DF67151CBCFC4806850A /* CharacterSets.swift */,\n\t\t\t);\n\t\t\tpath = Validation;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117D6941BC45C90FFFEC89A /* DOM */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117D0A6C96846F7C7231BD7 /* SAXNode.swift */,\n\t\t\t\t1117D4A60F6A6CF727D7FDC1 /* SAXAttribute.swift */,\n\t\t\t\t1117DF9AA2DF143AC20EB4E5 /* DocType */,\n\t\t\t\t1117D2073D1FB2038D3403D3 /* SAXElement.swift */,\n\t\t\t);\n\t\t\tpath = DOM;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117DA34C4883FCE9F6D0B90 /* TestData */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117D7BF1803856C4213CB5E /* Test.xml */,\n\t\t\t\t1117D9BAFC548A58FAF127F5 /* Test3.xml */,\n\t\t\t\t1117D7BD3C4A2B65CD16265F /* compname.txt */,\n\t\t\t\t1117DA00775621297FDDF090 /* Test4.xml */,\n\t\t\t\t1117D24C2AC342935E43EA54 /* Test.dtd */,\n\t\t\t\t1117DA1BA1656B061F4F54F0 /* Test2.xml */,\n\t\t\t\t1117D39A50E13D704326AF0E /* Test_UTF-8.xml */,\n\t\t\t\t1117D07930C31B9EB322C3C2 /* Test_UTF-16BE.xml */,\n\t\t\t\t1117D62B33D6FEF9D67D50E6 /* Test_UTF-32LE.xml */,\n\t\t\t\t1117D2654B632662DADD7449 /* Test_WINDOWS-1252.xml */,\n\t\t\t\t1117D173F94712C34C49032A /* Test_UTF-16BE_ext.xml */,\n\t\t\t\t1117D8C36782AC8D094246EE /* Test_UTF-16LE_ext.dtd */,\n\t\t\t\t1117D513D9FDF90E82E5D1D1 /* Test_UTF-8_ext.dtd */,\n\t\t\t\t1117DC6CE7526681197F1C19 /* Test_UTF-8_ext.xml */,\n\t\t\t);\n\t\t\tpath = TestData;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117DEDAC7FE093CE0515186 /* Other */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117D32792ADADA24039E4BC /* README.md */,\n\t\t\t\t1117DEC96369491CED3F9649 /* Package.swift */,\n\t\t\t\t1117D34903A4804B6646574A /* LICENSE */,\n\t\t\t\t1117D3250DFFCE3E85ABD6E2 /* .jazzy.yaml */,\n\t\t\t\t1117DF25C968B209A3179FBE /* .gitignore */,\n\t\t\t);\n\t\t\tname = Other;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t1117DF9AA2DF143AC20EB4E5 /* DocType */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117D8F099166931E1797992 /* SAXDTDElemCont.swift */,\n\t\t\t);\n\t\t\tpath = DocType;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t8356BB1B25D0375F00E41DFC /* EntityTool */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117D86804A3FA8399671C13 /* main.swift */,\n\t\t\t);\n\t\t\tpath = EntityTool;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t83CFA5A62556E331005498FC = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t83CFA5CD2556E55D005498FC /* Tests */,\n\t\t\t\t83CFA5CC2556E53E005498FC /* Sources */,\n\t\t\t\t83CFA5B12556E331005498FC /* Products */,\n\t\t\t\t1117DEDAC7FE093CE0515186 /* Other */,\n\t\t\t\t83DD3B8325B9CBEE0083BC1C /* Frameworks */,\n\t\t\t\t1117D354C456D6060A117C7E /* Resources */,\n\t\t\t);\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t83CFA5B12556E331005498FC /* Products */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t83CFA5B02556E331005498FC /* Gettysburg.framework */,\n\t\t\t\t83CFA5B92556E331005498FC /* GettysburgTests.xctest */,\n\t\t\t\t83CFA5D72556E6C4005498FC /* DocFixer */,\n\t\t\t\t8356BB1A25D0375F00E41DFC /* EntityTool */,\n\t\t\t);\n\t\t\tname = Products;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t83CFA5B22556E331005498FC /* Gettysburg */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117D2EC0E5DD8292487BE6B /* Other */,\n\t\t\t\t1117D557776ABCAF0E334CE5 /* Validation */,\n\t\t\t\t1117D3A1E6C4AA50C5538A81 /* SAXHandler.swift */,\n\t\t\t\t1117D6941BC45C90FFFEC89A /* DOM */,\n\t\t\t\t1117D1D1CA404704C027B264 /* Misc */,\n\t\t\t\t1117D1A63D2BE088AFE1141A /* Parser */,\n\t\t\t\t1117D31EACA76F49515CDEE8 /* IO */,\n\t\t\t\t1117DA141FDE8E30089588F4 /* SAXParser.swift */,\n\t\t\t);\n\t\t\tpath = Gettysburg;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t83CFA5BD2556E331005498FC /* GettysburgTests */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t83CFA5BE2556E331005498FC /* GettysburgTests.swift */,\n\t\t\t\t83CFA5C02556E331005498FC /* Info.plist */,\n\t\t\t\t1117DA34C4883FCE9F6D0B90 /* TestData */,\n\t\t\t\t1117DEB2BBDD656C51384346 /* SAXTestHandler.swift */,\n\t\t\t\t1117D464877EF4F09607BFED /* RegexTests.swift */,\n\t\t\t);\n\t\t\tpath = GettysburgTests;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t83CFA5CC2556E53E005498FC /* Sources */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t8356BB1B25D0375F00E41DFC /* EntityTool */,\n\t\t\t\t83CFA5D82556E6C4005498FC /* DocFixer */,\n\t\t\t\t83CFA5B22556E331005498FC /* Gettysburg */,\n\t\t\t);\n\t\t\tpath = Sources;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t83CFA5CD2556E55D005498FC /* Tests */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t83CFA5BD2556E331005498FC /* GettysburgTests */,\n\t\t\t\t1117DD5AFC911B2020139DDF /* LinuxMain.swift */,\n\t\t\t);\n\t\t\tpath = Tests;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t83CFA5D82556E6C4005498FC /* DocFixer */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t1117DB804342BF77458B8663 /* main.swift */,\n\t\t\t);\n\t\t\tpath = DocFixer;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n\t\t83DD3B8325B9CBEE0083BC1C /* Frameworks */ = {\n\t\t\tisa = PBXGroup;\n\t\t\tchildren = (\n\t\t\t\t83DD3B8425B9CBEE0083BC1C /* libiconv.tbd */,\n\t\t\t);\n\t\t\tname = Frameworks;\n\t\t\tsourceTree = \"<group>\";\n\t\t};\n/* End PBXGroup section */\n\n/* Begin PBXHeadersBuildPhase section */\n\t\t83CFA5AB2556E331005498FC /* Headers */ = {\n\t\t\tisa = PBXHeadersBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t1117DDAABC5C2559C3E58075 /* Gettysburg.h in Headers */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n/* End PBXHeadersBuildPhase section */\n\n/* Begin PBXNativeTarget section */\n\t\t8356BB1925D0375F00E41DFC /* EntityTool */ = {\n\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = 8356BB2025D0375F00E41DFC /* Build configuration list for PBXNativeTarget \"EntityTool\" */;\n\t\t\tbuildPhases = (\n\t\t\t\t8356BB1625D0375F00E41DFC /* Sources */,\n\t\t\t\t8356BB1725D0375F00E41DFC /* Frameworks */,\n\t\t\t\t8356BB1825D0375F00E41DFC /* CopyFiles */,\n\t\t\t);\n\t\t\tbuildRules = (\n\t\t\t);\n\t\t\tdependencies = (\n\t\t\t);\n\t\t\tname = EntityTool;\n\t\t\tpackageProductDependencies = (\n\t\t\t\t8356BB2625D0378F00E41DFC /* Rubicon */,\n\t\t\t);\n\t\t\tproductName = EntityTool;\n\t\t\tproductReference = 8356BB1A25D0375F00E41DFC /* EntityTool */;\n\t\t\tproductType = \"com.apple.product-type.tool\";\n\t\t};\n\t\t83CFA5AF2556E331005498FC /* Gettysburg */ = {\n\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = 83CFA5C42556E331005498FC /* Build configuration list for PBXNativeTarget \"Gettysburg\" */;\n\t\t\tbuildPhases = (\n\t\t\t\t83CFA5AB2556E331005498FC /* Headers */,\n\t\t\t\t83CFA5AC2556E331005498FC /* Sources */,\n\t\t\t\t83CFA5AD2556E331005498FC /* Frameworks */,\n\t\t\t\t83CFA5AE2556E331005498FC /* Resources */,\n\t\t\t);\n\t\t\tbuildRules = (\n\t\t\t);\n\t\t\tdependencies = (\n\t\t\t);\n\t\t\tname = Gettysburg;\n\t\t\tpackageProductDependencies = (\n\t\t\t\t83A6F52125C476F100C95BE8 /* Rubicon */,\n\t\t\t);\n\t\t\tproductName = Gettysburg;\n\t\t\tproductReference = 83CFA5B02556E331005498FC /* Gettysburg.framework */;\n\t\t\tproductType = \"com.apple.product-type.framework\";\n\t\t};\n\t\t83CFA5B82556E331005498FC /* GettysburgTests */ = {\n\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = 83CFA5C72556E331005498FC /* Build configuration list for PBXNativeTarget \"GettysburgTests\" */;\n\t\t\tbuildPhases = (\n\t\t\t\t83CFA5B52556E331005498FC /* Sources */,\n\t\t\t\t83CFA5B62556E331005498FC /* Frameworks */,\n\t\t\t\t83CFA5B72556E331005498FC /* Resources */,\n\t\t\t\t83EC590F266785E200936213 /* Embed Frameworks */,\n\t\t\t);\n\t\t\tbuildRules = (\n\t\t\t);\n\t\t\tdependencies = (\n\t\t\t\t83CFA5BC2556E331005498FC /* PBXTargetDependency */,\n\t\t\t);\n\t\t\tname = GettysburgTests;\n\t\t\tpackageProductDependencies = (\n\t\t\t);\n\t\t\tproductName = GettysburgTests;\n\t\t\tproductReference = 83CFA5B92556E331005498FC /* GettysburgTests.xctest */;\n\t\t\tproductType = \"com.apple.product-type.bundle.unit-test\";\n\t\t};\n\t\t83CFA5D62556E6C4005498FC /* DocFixer */ = {\n\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = 83CFA5DB2556E6C4005498FC /* Build configuration list for PBXNativeTarget \"DocFixer\" */;\n\t\t\tbuildPhases = (\n\t\t\t\t83CFA5D32556E6C4005498FC /* Sources */,\n\t\t\t\t83CFA5D42556E6C4005498FC /* Frameworks */,\n\t\t\t\t83CFA5D52556E6C4005498FC /* CopyFiles */,\n\t\t\t);\n\t\t\tbuildRules = (\n\t\t\t);\n\t\t\tdependencies = (\n\t\t\t\t83CFA61E25573638005498FC /* PBXTargetDependency */,\n\t\t\t);\n\t\t\tname = DocFixer;\n\t\t\tpackageProductDependencies = (\n\t\t\t\t83CFA5E22556E70C005498FC /* PGDocFixer */,\n\t\t\t);\n\t\t\tproductName = DocFixer;\n\t\t\tproductReference = 83CFA5D72556E6C4005498FC /* DocFixer */;\n\t\t\tproductType = \"com.apple.product-type.tool\";\n\t\t};\n/* End PBXNativeTarget section */\n\n/* Begin PBXProject section */\n\t\t83CFA5A72556E331005498FC /* Project object */ = {\n\t\t\tisa = PBXProject;\n\t\t\tattributes = {\n\t\t\t\tLastSwiftUpdateCheck = 1240;\n\t\t\t\tLastUpgradeCheck = 1220;\n\t\t\t\tTargetAttributes = {\n\t\t\t\t\t8356BB1925D0375F00E41DFC = {\n\t\t\t\t\t\tCreatedOnToolsVersion = 12.4;\n\t\t\t\t\t};\n\t\t\t\t\t83CFA5AF2556E331005498FC = {\n\t\t\t\t\t\tCreatedOnToolsVersion = 12.1;\n\t\t\t\t\t};\n\t\t\t\t\t83CFA5B82556E331005498FC = {\n\t\t\t\t\t\tCreatedOnToolsVersion = 12.1;\n\t\t\t\t\t};\n\t\t\t\t\t83CFA5D62556E6C4005498FC = {\n\t\t\t\t\t\tCreatedOnToolsVersion = 12.1;\n\t\t\t\t\t};\n\t\t\t\t\t83CFA60F255735DE005498FC = {\n\t\t\t\t\t\tCreatedOnToolsVersion = 12.1;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t\tbuildConfigurationList = 83CFA5AA2556E331005498FC /* Build configuration list for PBXProject \"Gettysburg\" */;\n\t\t\tcompatibilityVersion = \"Xcode 9.3\";\n\t\t\tdevelopmentRegion = en;\n\t\t\thasScannedForEncodings = 0;\n\t\t\tknownRegions = (\n\t\t\t\ten,\n\t\t\t\tBase,\n\t\t\t);\n\t\t\tmainGroup = 83CFA5A62556E331005498FC;\n\t\t\tpackageReferences = (\n\t\t\t\t83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference \"PGDocFixer.git\" */,\n\t\t\t\t838D394625B88044009FF043 /* XCRemoteSwiftPackageReference \"Rubicon.git\" */,\n\t\t\t);\n\t\t\tproductRefGroup = 83CFA5B12556E331005498FC /* Products */;\n\t\t\tprojectDirPath = \"\";\n\t\t\tprojectRoot = \"\";\n\t\t\ttargets = (\n\t\t\t\t83CFA5AF2556E331005498FC /* Gettysburg */,\n\t\t\t\t83CFA5B82556E331005498FC /* GettysburgTests */,\n\t\t\t\t83CFA5D62556E6C4005498FC /* DocFixer */,\n\t\t\t\t83CFA60F255735DE005498FC /* All Gettysburg */,\n\t\t\t\t8356BB1925D0375F00E41DFC /* EntityTool */,\n\t\t\t);\n\t\t};\n/* End PBXProject section */\n\n/* Begin PBXResourcesBuildPhase section */\n\t\t83CFA5AE2556E331005498FC /* Resources */ = {\n\t\t\tisa = PBXResourcesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n\t\t83CFA5B72556E331005498FC /* Resources */ = {\n\t\t\tisa = PBXResourcesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n/* End PBXResourcesBuildPhase section */\n\n/* Begin PBXSourcesBuildPhase section */\n\t\t8356BB1625D0375F00E41DFC /* Sources */ = {\n\t\t\tisa = PBXSourcesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t8356BB3C25D038AA00E41DFC /* main.swift in Sources */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n\t\t83CFA5AC2556E331005498FC /* Sources */ = {\n\t\t\tisa = PBXSourcesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t1117DA9DA3ACFB977CAA77CA /* CharacterSets.swift in Sources */,\n\t\t\t\t1117D0A4FF07F25A60BC18D2 /* SAXHandler.swift in Sources */,\n\t\t\t\t1117D22191E359EA24C6A826 /* Extensions.swift in Sources */,\n\t\t\t\t1117DD52BDA82EF3D833AEE7 /* Enums.swift in Sources */,\n\t\t\t\t1117DAE28F5216597168750E /* SAXError.swift in Sources */,\n\t\t\t\t1117D91388446226B32F9AA1 /* Tools.swift in Sources */,\n\t\t\t\t1117D8AD7D6CA03FDCE996C6 /* SAXNSName.swift in Sources */,\n\t\t\t\t1117D1D38E14C53743B54C9A /* SAXParser.swift in Sources */,\n\t\t\t\t1117D2B649D71DC8F4CA3AE4 /* SAXNode.swift in Sources */,\n\t\t\t\t1117DC728363250D1EB182AB /* SAXAttribute.swift in Sources */,\n\t\t\t\t1117D15FB85592BBFC4F222F /* SAXDTDElemCont.swift in Sources */,\n\t\t\t\t1117D5351D9A90E67CC0D80B /* KVPair.swift in Sources */,\n\t\t\t\t1117DE439389356B24FA9CF8 /* XMLDeclData.swift in Sources */,\n\t\t\t\t1117DEBC95E030F734C09CC3 /* SAXElement.swift in Sources */,\n\t\t\t\t1117D3A334D5DC0A4F440318 /* SAXCharInputStreamStack.swift in Sources */,\n\t\t\t\t1117D64821E98B014C70A0F5 /* SAXCharInputStream.swift in Sources */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n\t\t83CFA5B52556E331005498FC /* Sources */ = {\n\t\t\tisa = PBXSourcesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t83CFA5BF2556E331005498FC /* GettysburgTests.swift in Sources */,\n\t\t\t\t1117D68B62FFD1AA32F00AEB /* SAXTestHandler.swift in Sources */,\n\t\t\t\t1117D04D745A95855B838B79 /* RegexTests.swift in Sources */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n\t\t83CFA5D32556E6C4005498FC /* Sources */ = {\n\t\t\tisa = PBXSourcesBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n\t\t\t\t1117DBACBBB748A8639285FD /* main.swift in Sources */,\n\t\t\t);\n\t\t\trunOnlyForDeploymentPostprocessing = 0;\n\t\t};\n/* End PBXSourcesBuildPhase section */\n\n/* Begin PBXTargetDependency section */\n\t\t8356BB4325D038CC00E41DFC /* PBXTargetDependency */ = {\n\t\t\tisa = PBXTargetDependency;\n\t\t\ttarget = 8356BB1925D0375F00E41DFC /* EntityTool */;\n\t\t\ttargetProxy = 8356BB4225D038CC00E41DFC /* PBXContainerItemProxy */;\n\t\t};\n\t\t83CFA5BC2556E331005498FC /* PBXTargetDependency */ = {\n\t\t\tisa = PBXTargetDependency;\n\t\t\ttarget = 83CFA5AF2556E331005498FC /* Gettysburg */;\n\t\t\ttargetProxy = 83CFA5BB2556E331005498FC /* PBXContainerItemProxy */;\n\t\t};\n\t\t83CFA61825573611005498FC /* PBXTargetDependency */ = {\n\t\t\tisa = PBXTargetDependency;\n\t\t\ttarget = 83CFA5AF2556E331005498FC /* Gettysburg */;\n\t\t\ttargetProxy = 83CFA61725573611005498FC /* PBXContainerItemProxy */;\n\t\t};\n\t\t83CFA61A25573616005498FC /* PBXTargetDependency */ = {\n\t\t\tisa = PBXTargetDependency;\n\t\t\ttarget = 83CFA5B82556E331005498FC /* GettysburgTests */;\n\t\t\ttargetProxy = 83CFA61925573616005498FC /* PBXContainerItemProxy */;\n\t\t};\n\t\t83CFA61C25573619005498FC /* PBXTargetDependency */ = {\n\t\t\tisa = PBXTargetDependency;\n\t\t\ttarget = 83CFA5D62556E6C4005498FC /* DocFixer */;\n\t\t\ttargetProxy = 83CFA61B25573619005498FC /* PBXContainerItemProxy */;\n\t\t};\n\t\t83CFA61E25573638005498FC /* PBXTargetDependency */ = {\n\t\t\tisa = PBXTargetDependency;\n\t\t\ttarget = 83CFA5AF2556E331005498FC /* Gettysburg */;\n\t\t\ttargetProxy = 83CFA61D25573638005498FC /* PBXContainerItemProxy */;\n\t\t};\n/* End PBXTargetDependency section */\n\n/* Begin XCBuildConfiguration section */\n\t\t8356BB1E25D0375F00E41DFC /* Debug */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tENABLE_HARDENED_RUNTIME = YES;\n\t\t\t\tMACOSX_DEPLOYMENT_TARGET = 11.1;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n\t\t\t\tSWIFT_VERSION = 5.0;\n\t\t\t};\n\t\t\tname = Debug;\n\t\t};\n\t\t8356BB1F25D0375F00E41DFC /* Release */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tENABLE_HARDENED_RUNTIME = YES;\n\t\t\t\tMACOSX_DEPLOYMENT_TARGET = 11.1;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n\t\t\t\tSWIFT_VERSION = 5.0;\n\t\t\t};\n\t\t\tname = Release;\n\t\t};\n\t\t83CFA5C22556E331005498FC /* Debug */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n\t\t\t\tCLANG_ANALYZER_NONNULL = YES;\n\t\t\t\tCLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;\n\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"gnu++14\";\n\t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n\t\t\t\tCLANG_ENABLE_MODULES = YES;\n\t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n\t\t\t\tCLANG_ENABLE_OBJC_WEAK = YES;\n\t\t\t\tCLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;\n\t\t\t\tCLANG_WARN_BOOL_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_COMMA = YES;\n\t\t\t\tCLANG_WARN_CONSTANT_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;\n\t\t\t\tCLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;\n\t\t\t\tCLANG_WARN_DOCUMENTATION_COMMENTS = YES;\n\t\t\t\tCLANG_WARN_EMPTY_BODY = YES;\n\t\t\t\tCLANG_WARN_ENUM_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_INFINITE_RECURSION = YES;\n\t\t\t\tCLANG_WARN_INT_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;\n\t\t\t\tCLANG_WARN_OBJC_LITERAL_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;\n\t\t\t\tCLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;\n\t\t\t\tCLANG_WARN_RANGE_LOOP_ANALYSIS = YES;\n\t\t\t\tCLANG_WARN_STRICT_PROTOTYPES = YES;\n\t\t\t\tCLANG_WARN_SUSPICIOUS_MOVE = YES;\n\t\t\t\tCLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;\n\t\t\t\tCLANG_WARN_UNREACHABLE_CODE = YES;\n\t\t\t\tCLANG_WARN__DUPLICATE_METHOD_MATCH = YES;\n\t\t\t\tCOPY_PHASE_STRIP = NO;\n\t\t\t\tCURRENT_PROJECT_VERSION = 1;\n\t\t\t\tDEBUG_INFORMATION_FORMAT = dwarf;\n\t\t\t\tENABLE_STRICT_OBJC_MSGSEND = YES;\n\t\t\t\tENABLE_TESTABILITY = YES;\n\t\t\t\tGCC_C_LANGUAGE_STANDARD = gnu11;\n\t\t\t\tGCC_DYNAMIC_NO_PIC = NO;\n\t\t\t\tGCC_NO_COMMON_BLOCKS = YES;\n\t\t\t\tGCC_OPTIMIZATION_LEVEL = 0;\n\t\t\t\tGCC_PREPROCESSOR_DEFINITIONS = (\n\t\t\t\t\t\"DEBUG=1\",\n\t\t\t\t\t\"$(inherited)\",\n\t\t\t\t);\n\t\t\t\tGCC_WARN_64_TO_32_BIT_CONVERSION = YES;\n\t\t\t\tGCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;\n\t\t\t\tGCC_WARN_UNDECLARED_SELECTOR = YES;\n\t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n\t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n\t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n\t\t\t\tMACOSX_DEPLOYMENT_TARGET = 10.15;\n\t\t\t\tMTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;\n\t\t\t\tMTL_FAST_MATH = YES;\n\t\t\t\tONLY_ACTIVE_ARCH = YES;\n\t\t\t\tSDKROOT = macosx;\n\t\t\t\tSWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;\n\t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n\t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n\t\t\t\tVERSION_INFO_PREFIX = \"\";\n\t\t\t};\n\t\t\tname = Debug;\n\t\t};\n\t\t83CFA5C32556E331005498FC /* Release */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n\t\t\t\tCLANG_ANALYZER_NONNULL = YES;\n\t\t\t\tCLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;\n\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"gnu++14\";\n\t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n\t\t\t\tCLANG_ENABLE_MODULES = YES;\n\t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n\t\t\t\tCLANG_ENABLE_OBJC_WEAK = YES;\n\t\t\t\tCLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;\n\t\t\t\tCLANG_WARN_BOOL_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_COMMA = YES;\n\t\t\t\tCLANG_WARN_CONSTANT_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;\n\t\t\t\tCLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;\n\t\t\t\tCLANG_WARN_DOCUMENTATION_COMMENTS = YES;\n\t\t\t\tCLANG_WARN_EMPTY_BODY = YES;\n\t\t\t\tCLANG_WARN_ENUM_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_INFINITE_RECURSION = YES;\n\t\t\t\tCLANG_WARN_INT_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;\n\t\t\t\tCLANG_WARN_OBJC_LITERAL_CONVERSION = YES;\n\t\t\t\tCLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;\n\t\t\t\tCLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;\n\t\t\t\tCLANG_WARN_RANGE_LOOP_ANALYSIS = YES;\n\t\t\t\tCLANG_WARN_STRICT_PROTOTYPES = YES;\n\t\t\t\tCLANG_WARN_SUSPICIOUS_MOVE = YES;\n\t\t\t\tCLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;\n\t\t\t\tCLANG_WARN_UNREACHABLE_CODE = YES;\n\t\t\t\tCLANG_WARN__DUPLICATE_METHOD_MATCH = YES;\n\t\t\t\tCOPY_PHASE_STRIP = NO;\n\t\t\t\tCURRENT_PROJECT_VERSION = 1;\n\t\t\t\tDEBUG_INFORMATION_FORMAT = \"dwarf-with-dsym\";\n\t\t\t\tENABLE_NS_ASSERTIONS = NO;\n\t\t\t\tENABLE_STRICT_OBJC_MSGSEND = YES;\n\t\t\t\tGCC_C_LANGUAGE_STANDARD = gnu11;\n\t\t\t\tGCC_NO_COMMON_BLOCKS = YES;\n\t\t\t\tGCC_WARN_64_TO_32_BIT_CONVERSION = YES;\n\t\t\t\tGCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;\n\t\t\t\tGCC_WARN_UNDECLARED_SELECTOR = YES;\n\t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n\t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n\t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n\t\t\t\tMACOSX_DEPLOYMENT_TARGET = 10.15;\n\t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n\t\t\t\tMTL_FAST_MATH = YES;\n\t\t\t\tONLY_ACTIVE_ARCH = YES;\n\t\t\t\tSDKROOT = macosx;\n\t\t\t\tSWIFT_COMPILATION_MODE = wholemodule;\n\t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-O\";\n\t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n\t\t\t\tVERSION_INFO_PREFIX = \"\";\n\t\t\t};\n\t\t\tname = Release;\n\t\t};\n\t\t83CFA5C52556E331005498FC /* Debug */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tCOMBINE_HIDPI_IMAGES = YES;\n\t\t\t\tDEFINES_MODULE = YES;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tDYLIB_COMPATIBILITY_VERSION = 1;\n\t\t\t\tDYLIB_CURRENT_VERSION = 1;\n\t\t\t\tDYLIB_INSTALL_NAME_BASE = \"@rpath\";\n\t\t\t\tINFOPLIST_FILE = Sources/Gettysburg/Info.plist;\n\t\t\t\tINSTALL_PATH = \"$(LOCAL_LIBRARY_DIR)/Frameworks\";\n\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n\t\t\t\t\t\"$(inherited)\",\n\t\t\t\t\t\"@executable_path/../Frameworks\",\n\t\t\t\t\t\"@loader_path/Frameworks\",\n\t\t\t\t);\n\t\t\t\tMACOSX_DEPLOYMENT_TARGET = 10.15;\n\t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = com.projectgalen.Gettysburg;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME:c99extidentifier)\";\n\t\t\t\tSKIP_INSTALL = YES;\n\t\t\t\tSWIFT_ACTIVE_COMPILATION_CONDITIONS = \"DEBUG DEBUGGETTYSBURG\";\n\t\t\t\tSWIFT_VERSION = 5.0;\n\t\t\t};\n\t\t\tname = Debug;\n\t\t};\n\t\t83CFA5C62556E331005498FC /* Release */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tCOMBINE_HIDPI_IMAGES = YES;\n\t\t\t\tDEFINES_MODULE = YES;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tDYLIB_COMPATIBILITY_VERSION = 1;\n\t\t\t\tDYLIB_CURRENT_VERSION = 1;\n\t\t\t\tDYLIB_INSTALL_NAME_BASE = \"@rpath\";\n\t\t\t\tINFOPLIST_FILE = Sources/Gettysburg/Info.plist;\n\t\t\t\tINSTALL_PATH = \"$(LOCAL_LIBRARY_DIR)/Frameworks\";\n\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n\t\t\t\t\t\"$(inherited)\",\n\t\t\t\t\t\"@executable_path/../Frameworks\",\n\t\t\t\t\t\"@loader_path/Frameworks\",\n\t\t\t\t);\n\t\t\t\tMACOSX_DEPLOYMENT_TARGET = 10.15;\n\t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = com.projectgalen.Gettysburg;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME:c99extidentifier)\";\n\t\t\t\tSKIP_INSTALL = YES;\n\t\t\t\tSWIFT_ACTIVE_COMPILATION_CONDITIONS = RELEASE;\n\t\t\t\tSWIFT_VERSION = 5.0;\n\t\t\t};\n\t\t\tname = Release;\n\t\t};\n\t\t83CFA5C82556E331005498FC /* Debug */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tCOMBINE_HIDPI_IMAGES = YES;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tINFOPLIST_FILE = Tests/GettysburgTests/Info.plist;\n\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n\t\t\t\t\t\"$(inherited)\",\n\t\t\t\t\t\"@executable_path/../Frameworks\",\n\t\t\t\t\t\"@loader_path/../Frameworks\",\n\t\t\t\t);\n\t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = com.projectgalen.GettysburgTests;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n\t\t\t\tSWIFT_VERSION = 5.0;\n\t\t\t};\n\t\t\tname = Debug;\n\t\t};\n\t\t83CFA5C92556E331005498FC /* Release */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tCOMBINE_HIDPI_IMAGES = YES;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tINFOPLIST_FILE = Tests/GettysburgTests/Info.plist;\n\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n\t\t\t\t\t\"$(inherited)\",\n\t\t\t\t\t\"@executable_path/../Frameworks\",\n\t\t\t\t\t\"@loader_path/../Frameworks\",\n\t\t\t\t);\n\t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = com.projectgalen.GettysburgTests;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n\t\t\t\tSWIFT_VERSION = 5.0;\n\t\t\t};\n\t\t\tname = Release;\n\t\t};\n\t\t83CFA5DC2556E6C4005498FC /* Debug */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_IDENTITY = \"-\";\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tENABLE_HARDENED_RUNTIME = YES;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n\t\t\t\tSWIFT_VERSION = 5.0;\n\t\t\t};\n\t\t\tname = Debug;\n\t\t};\n\t\t83CFA5DD2556E6C4005498FC /* Release */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_IDENTITY = \"-\";\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tENABLE_HARDENED_RUNTIME = YES;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n\t\t\t\tSWIFT_VERSION = 5.0;\n\t\t\t};\n\t\t\tname = Release;\n\t\t};\n\t\t83CFA610255735DE005498FC /* Debug */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n\t\t\t};\n\t\t\tname = Debug;\n\t\t};\n\t\t83CFA611255735DE005498FC /* Release */ = {\n\t\t\tisa = XCBuildConfiguration;\n\t\t\tbuildSettings = {\n\t\t\t\tCODE_SIGN_STYLE = Automatic;\n\t\t\t\tDEVELOPMENT_TEAM = Q5XWZ7S7E9;\n\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n\t\t\t};\n\t\t\tname = Release;\n\t\t};\n/* End XCBuildConfiguration section */\n\n/* Begin XCConfigurationList section */\n\t\t8356BB2025D0375F00E41DFC /* Build configuration list for PBXNativeTarget \"EntityTool\" */ = {\n\t\t\tisa = XCConfigurationList;\n\t\t\tbuildConfigurations = (\n\t\t\t\t8356BB1E25D0375F00E41DFC /* Debug */,\n\t\t\t\t8356BB1F25D0375F00E41DFC /* Release */,\n\t\t\t);\n\t\t\tdefaultConfigurationIsVisible = 0;\n\t\t\tdefaultConfigurationName = Release;\n\t\t};\n\t\t83CFA5AA2556E331005498FC /* Build configuration list for PBXProject \"Gettysburg\" */ = {\n\t\t\tisa = XCConfigurationList;\n\t\t\tbuildConfigurations = (\n\t\t\t\t83CFA5C22556E331005498FC /* Debug */,\n\t\t\t\t83CFA5C32556E331005498FC /* Release */,\n\t\t\t);\n\t\t\tdefaultConfigurationIsVisible = 0;\n\t\t\tdefaultConfigurationName = Release;\n\t\t};\n\t\t83CFA5C42556E331005498FC /* Build configuration list for PBXNativeTarget \"Gettysburg\" */ = {\n\t\t\tisa = XCConfigurationList;\n\t\t\tbuildConfigurations = (\n\t\t\t\t83CFA5C52556E331005498FC /* Debug */,\n\t\t\t\t83CFA5C62556E331005498FC /* Release */,\n\t\t\t);\n\t\t\tdefaultConfigurationIsVisible = 0;\n\t\t\tdefaultConfigurationName = Release;\n\t\t};\n\t\t83CFA5C72556E331005498FC /* Build configuration list for PBXNativeTarget \"GettysburgTests\" */ = {\n\t\t\tisa = XCConfigurationList;\n\t\t\tbuildConfigurations = (\n\t\t\t\t83CFA5C82556E331005498FC /* Debug */,\n\t\t\t\t83CFA5C92556E331005498FC /* Release */,\n\t\t\t);\n\t\t\tdefaultConfigurationIsVisible = 0;\n\t\t\tdefaultConfigurationName = Release;\n\t\t};\n\t\t83CFA5DB2556E6C4005498FC /* Build configuration list for PBXNativeTarget \"DocFixer\" */ = {\n\t\t\tisa = XCConfigurationList;\n\t\t\tbuildConfigurations = (\n\t\t\t\t83CFA5DC2556E6C4005498FC /* Debug */,\n\t\t\t\t83CFA5DD2556E6C4005498FC /* Release */,\n\t\t\t);\n\t\t\tdefaultConfigurationIsVisible = 0;\n\t\t\tdefaultConfigurationName = Release;\n\t\t};\n\t\t83CFA612255735DE005498FC /* Build configuration list for PBXAggregateTarget \"All Gettysburg\" */ = {\n\t\t\tisa = XCConfigurationList;\n\t\t\tbuildConfigurations = (\n\t\t\t\t83CFA610255735DE005498FC /* Debug */,\n\t\t\t\t83CFA611255735DE005498FC /* Release */,\n\t\t\t);\n\t\t\tdefaultConfigurationIsVisible = 0;\n\t\t\tdefaultConfigurationName = Release;\n\t\t};\n/* End XCConfigurationList section */\n\n/* Begin XCRemoteSwiftPackageReference section */\n\t\t838D394625B88044009FF043 /* XCRemoteSwiftPackageReference \"Rubicon.git\" */ = {\n\t\t\tisa = XCRemoteSwiftPackageReference;\n\t\t\trepositoryURL = \"https://github.com/GalenRhodes/Rubicon.git\";\n\t\t\trequirement = {\n\t\t\t\tkind = upToNextMinorVersion;\n\t\t\t\tminimumVersion = 0.2.44;\n\t\t\t};\n\t\t};\n\t\t83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference \"PGDocFixer.git\" */ = {\n\t\t\tisa = XCRemoteSwiftPackageReference;\n\t\t\trepositoryURL = \"https://github.com/GalenRhodes/PGDocFixer.git\";\n\t\t\trequirement = {\n\t\t\t\tkind = upToNextMajorVersion;\n\t\t\t\tminimumVersion = 1.0.10;\n\t\t\t};\n\t\t};\n/* End XCRemoteSwiftPackageReference section */\n\n/* Begin XCSwiftPackageProductDependency section */\n\t\t8356BB2625D0378F00E41DFC /* Rubicon */ = {\n\t\t\tisa = XCSwiftPackageProductDependency;\n\t\t\tpackage = 838D394625B88044009FF043 /* XCRemoteSwiftPackageReference \"Rubicon.git\" */;\n\t\t\tproductName = Rubicon;\n\t\t};\n\t\t83A6F52125C476F100C95BE8 /* Rubicon */ = {\n\t\t\tisa = XCSwiftPackageProductDependency;\n\t\t\tpackage = 838D394625B88044009FF043 /* XCRemoteSwiftPackageReference \"Rubicon.git\" */;\n\t\t\tproductName = Rubicon;\n\t\t};\n\t\t83CFA5E22556E70C005498FC /* PGDocFixer */ = {\n\t\t\tisa = XCSwiftPackageProductDependency;\n\t\t\tpackage = 83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference \"PGDocFixer.git\" */;\n\t\t\tproductName = PGDocFixer;\n\t\t};\n/* End XCSwiftPackageProductDependency section */\n\t};\n\trootObject = 83CFA5A72556E331005498FC /* Project object */;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Gettysburg.xcodeproj/project.pbxproj b/Gettysburg.xcodeproj/project.pbxproj
--- a/Gettysburg.xcodeproj/project.pbxproj	
+++ b/Gettysburg.xcodeproj/project.pbxproj	
@@ -49,6 +49,7 @@
 		830E3C972631AC0600F3835F /* Rubicon in Frameworks */ = {isa = PBXBuildFile; productRef = 8356BB2625D0378F00E41DFC /* Rubicon */; };
 		8356BB3C25D038AA00E41DFC /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1117D86804A3FA8399671C13 /* main.swift */; };
 		8356BB4425D03A8100E41DFC /* libiconv.tbd in Frameworks */ = {isa = PBXBuildFile; fileRef = 83DD3B8425B9CBEE0083BC1C /* libiconv.tbd */; };
+		835BCD9226ECD29200B5DEF0 /* RedBlackTree in Frameworks */ = {isa = PBXBuildFile; productRef = 835BCD9126ECD29200B5DEF0 /* RedBlackTree */; };
 		83CFA5BA2556E331005498FC /* Gettysburg.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 83CFA5B02556E331005498FC /* Gettysburg.framework */; };
 		83CFA5BF2556E331005498FC /* GettysburgTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 83CFA5BE2556E331005498FC /* GettysburgTests.swift */; };
 		83F8D67425C4816A004DD445 /* libiconv.tbd in Frameworks */ = {isa = PBXBuildFile; fileRef = 83DD3B8425B9CBEE0083BC1C /* libiconv.tbd */; };
@@ -164,6 +165,7 @@
 		1117DA1BA1656B061F4F54F0 /* Test2.xml */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = Test2.xml; sourceTree = "<group>"; };
 		1117DA52094C2ABAE3EA2EBA /* Gettysburg.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Gettysburg.h; sourceTree = "<group>"; };
 		1117DAD447FF55D3AE9410E2 /* KVPair.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = KVPair.swift; sourceTree = "<group>"; };
+		1117DB45C6A3B646DF1E437D /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.info; path = Info.plist; sourceTree = "<group>"; };
 		1117DB804342BF77458B8663 /* main.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
 		1117DC6CE7526681197F1C19 /* Test_UTF-8_ext.xml */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xml; path = "Test_UTF-8_ext.xml"; sourceTree = "<group>"; };
 		1117DC7646A5D899AD4EA50E /* XMLDeclData.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = XMLDeclData.swift; sourceTree = "<group>"; };
@@ -180,7 +182,6 @@
 		83CFA5B02556E331005498FC /* Gettysburg.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Gettysburg.framework; sourceTree = BUILT_PRODUCTS_DIR; };
 		83CFA5B92556E331005498FC /* GettysburgTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = GettysburgTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		83CFA5BE2556E331005498FC /* GettysburgTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GettysburgTests.swift; sourceTree = "<group>"; };
-		83CFA5C02556E331005498FC /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		83CFA5D72556E6C4005498FC /* DocFixer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = DocFixer; sourceTree = BUILT_PRODUCTS_DIR; };
 		83DD3B8425B9CBEE0083BC1C /* libiconv.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libiconv.tbd; path = usr/lib/libiconv.tbd; sourceTree = SDKROOT; };
 /* End PBXFileReference section */
@@ -201,6 +202,7 @@
 			files = (
 				83F8D67425C4816A004DD445 /* libiconv.tbd in Frameworks */,
 				830E3C952631AC0600F3835F /* Rubicon in Frameworks */,
+				835BCD9226ECD29200B5DEF0 /* RedBlackTree in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -231,6 +233,14 @@
 			);
 			path = Parser;
 			sourceTree = "<group>";
+		};
+		1117D1CE12A2F092F5601C8E /* Other */ = {
+			isa = PBXGroup;
+			children = (
+				1117DB45C6A3B646DF1E437D /* Info.plist */,
+			);
+			name = Other;
+			sourceTree = "<group>";
 		};
 		1117D1D1CA404704C027B264 /* Misc */ = {
 			isa = PBXGroup;
@@ -382,10 +392,10 @@
 			isa = PBXGroup;
 			children = (
 				83CFA5BE2556E331005498FC /* GettysburgTests.swift */,
-				83CFA5C02556E331005498FC /* Info.plist */,
 				1117DA34C4883FCE9F6D0B90 /* TestData */,
 				1117DEB2BBDD656C51384346 /* SAXTestHandler.swift */,
 				1117D464877EF4F09607BFED /* RegexTests.swift */,
+				1117D1CE12A2F092F5601C8E /* Other */,
 			);
 			path = GettysburgTests;
 			sourceTree = "<group>";
@@ -475,6 +485,7 @@
 			name = Gettysburg;
 			packageProductDependencies = (
 				83A6F52125C476F100C95BE8 /* Rubicon */,
+				835BCD9126ECD29200B5DEF0 /* RedBlackTree */,
 			);
 			productName = Gettysburg;
 			productReference = 83CFA5B02556E331005498FC /* Gettysburg.framework */;
@@ -558,8 +569,9 @@
 			);
 			mainGroup = 83CFA5A62556E331005498FC;
 			packageReferences = (
-				83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference "PGDocFixer.git" */,
-				838D394625B88044009FF043 /* XCRemoteSwiftPackageReference "Rubicon.git" */,
+				83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference "PGDocFixer" */,
+				838D394625B88044009FF043 /* XCRemoteSwiftPackageReference "Rubicon" */,
+				835BCD9026ECD29200B5DEF0 /* XCRemoteSwiftPackageReference "RedBlackTree" */,
 			);
 			productRefGroup = 83CFA5B12556E331005498FC /* Products */;
 			projectDirPath = "";
@@ -1013,15 +1025,23 @@
 /* End XCConfigurationList section */
 
 /* Begin XCRemoteSwiftPackageReference section */
-		838D394625B88044009FF043 /* XCRemoteSwiftPackageReference "Rubicon.git" */ = {
+		835BCD9026ECD29200B5DEF0 /* XCRemoteSwiftPackageReference "RedBlackTree" */ = {
+			isa = XCRemoteSwiftPackageReference;
+			repositoryURL = "https://github.com/GalenRhodes/RedBlackTree";
+			requirement = {
+				kind = upToNextMajorVersion;
+				minimumVersion = 2.0.2;
+			};
+		};
+		838D394625B88044009FF043 /* XCRemoteSwiftPackageReference "Rubicon" */ = {
 			isa = XCRemoteSwiftPackageReference;
 			repositoryURL = "https://github.com/GalenRhodes/Rubicon.git";
 			requirement = {
 				kind = upToNextMinorVersion;
-				minimumVersion = 0.2.44;
+				minimumVersion = 0.7.0;
 			};
 		};
-		83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference "PGDocFixer.git" */ = {
+		83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference "PGDocFixer" */ = {
 			isa = XCRemoteSwiftPackageReference;
 			repositoryURL = "https://github.com/GalenRhodes/PGDocFixer.git";
 			requirement = {
@@ -1034,17 +1054,22 @@
 /* Begin XCSwiftPackageProductDependency section */
 		8356BB2625D0378F00E41DFC /* Rubicon */ = {
 			isa = XCSwiftPackageProductDependency;
-			package = 838D394625B88044009FF043 /* XCRemoteSwiftPackageReference "Rubicon.git" */;
+			package = 838D394625B88044009FF043 /* XCRemoteSwiftPackageReference "Rubicon" */;
 			productName = Rubicon;
 		};
+		835BCD9126ECD29200B5DEF0 /* RedBlackTree */ = {
+			isa = XCSwiftPackageProductDependency;
+			package = 835BCD9026ECD29200B5DEF0 /* XCRemoteSwiftPackageReference "RedBlackTree" */;
+			productName = RedBlackTree;
+		};
 		83A6F52125C476F100C95BE8 /* Rubicon */ = {
 			isa = XCSwiftPackageProductDependency;
-			package = 838D394625B88044009FF043 /* XCRemoteSwiftPackageReference "Rubicon.git" */;
+			package = 838D394625B88044009FF043 /* XCRemoteSwiftPackageReference "Rubicon" */;
 			productName = Rubicon;
 		};
 		83CFA5E22556E70C005498FC /* PGDocFixer */ = {
 			isa = XCSwiftPackageProductDependency;
-			package = 83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference "PGDocFixer.git" */;
+			package = 83CFA5E12556E70C005498FC /* XCRemoteSwiftPackageReference "PGDocFixer" */;
 			productName = PGDocFixer;
 		};
 /* End XCSwiftPackageProductDependency section */
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"60b0239b-d5a7-4057-9e21-57829d56877e\" name=\"Default Changelist\" comment=\"More\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/runConfigurations/RegexTests.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/runConfigurations/RegexTests.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Gettysburg.xcodeproj/project.pbxproj\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Gettysburg.xcodeproj/project.pbxproj\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Gettysburg.xcodeproj/xcshareddata/xcschemes/RegexTests.xcscheme\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Gettysburg.xcodeproj/xcshareddata/xcschemes/RegexTests.xcscheme\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElementContentItem.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElemCont.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Sources/Gettysburg/Misc/Enums.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Sources/Gettysburg/Misc/Enums.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Sources/Gettysburg/Misc/Extensions.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Sources/Gettysburg/Misc/Extensions.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Sources/Gettysburg/SAXHandler.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Sources/Gettysburg/SAXHandler.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Sources/Gettysburg/SAXParser.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Sources/Gettysburg/SAXParser.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Sources/Gettysburg/Validation/CharacterSets.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Sources/Gettysburg/Validation/CharacterSets.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Tests/GettysburgTests/RegexTests.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Tests/GettysburgTests/RegexTests.swift\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Tests/GettysburgTests/SAXTestHandler.swift\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Tests/GettysburgTests/SAXTestHandler.swift\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ChangesViewManager\">\n    <option name=\"groupingKeys\">\n      <option value=\"directory\" />\n    </option>\n  </component>\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"macos_macos_x86_64\" />\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIEW_PUSH_PROTECTED_ONLY\" value=\"true\" />\n    <option name=\"PUSH_TAGS\">\n      <GitPushTagMode>\n        <option name=\"argument\" value=\"--tags\" />\n        <option name=\"title\" value=\"All\" />\n      </GitPushTagMode>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"file://$PROJECT_DIR$/Sources/Gettysburg/SAXHandler.swift\" root0=\"FORCE_HIGHLIGHTING\" />\n    <setting file=\"file://$PROJECT_DIR$/Tests/GettysburgTests/TestData/Test_UTF-8.xml\" root0=\"FORCE_HIGHLIGHTING\" />\n    <setting file=\"file://$PROJECT_DIR$/Sources/Gettysburg/Misc/SAXError.swift\" root0=\"FORCE_HIGHLIGHTING\" />\n    <setting file=\"file://$PROJECT_DIR$/Tests/GettysburgTests/GettysburgTests.swift\" root0=\"FORCE_HIGHLIGHTING\" />\n    <setting file=\"file://$PROJECT_DIR$/Sources/Gettysburg/IO/SAXCharInputStreamStack.swift\" root0=\"FORCE_HIGHLIGHTING\" />\n  </component>\n  <component name=\"MacroExpansionManager\">\n    <option name=\"directoryName\" value=\"0kgei8de\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1nL8BlruAU5rgYSamTyo1akllx4\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"autoscrollFromSource\" value=\"true\" />\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n    <option name=\"showMembers\" value=\"true\" />\n    <option name=\"showVisibilityIcons\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"OBJC.PRESERVED_TARGET_SELECTION\" value=\"\" />\n    <property name=\"OverrideImplement.combined\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\n    <property name=\"com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File\" value=\"TEXT\" />\n    <property name=\"dart.analysis.tool.window.visible\" value=\"false\" />\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n    <property name=\"nodejs_interpreter_path.stuck_in_default_project\" value=\"undefined stuck path\" />\n    <property name=\"nodejs_npm_path_reset_for_default_project\" value=\"true\" />\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.fileTypes\" />\n  </component>\n  <component name=\"RunManager\" selected=\"XCTest.Gettysburg Tests - testParser\">\n    <list>\n      <item itemvalue=\"Application.EntityTool\" />\n      <item itemvalue=\"Application.DocFixer\" />\n      <item itemvalue=\"Application.Gettysburg\" />\n      <item itemvalue=\"XCTest.Gettysburg Tests - testParser\" />\n      <item itemvalue=\"XCTest.RegexTests\" />\n      <item itemvalue=\"XCTest.Gettysburg Tests - testSAXSimpleIConvCharInputStream\" />\n    </list>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"60b0239b-d5a7-4057-9e21-57829d56877e\" name=\"Default Changelist\" comment=\"\" />\n      <created>1611157880486</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1611157880486</updated>\n      <workItem from=\"1611157884044\" duration=\"11011000\" />\n      <workItem from=\"1611231535934\" duration=\"12943000\" />\n      <workItem from=\"1611343353159\" duration=\"1827000\" />\n      <workItem from=\"1611582537991\" duration=\"40947000\" />\n      <workItem from=\"1611767409621\" duration=\"10808000\" />\n      <workItem from=\"1611863099753\" duration=\"3126000\" />\n      <workItem from=\"1611928199356\" duration=\"6674000\" />\n      <workItem from=\"1611942236005\" duration=\"5358000\" />\n      <workItem from=\"1611950551320\" duration=\"1116000\" />\n      <workItem from=\"1611951854148\" duration=\"655000\" />\n      <workItem from=\"1611952872137\" duration=\"1054000\" />\n      <workItem from=\"1612041602742\" duration=\"1457000\" />\n      <workItem from=\"1612358924516\" duration=\"18945000\" />\n      <workItem from=\"1612444282688\" duration=\"985000\" />\n      <workItem from=\"1612445613180\" duration=\"25903000\" />\n      <workItem from=\"1612528284295\" duration=\"5430000\" />\n      <workItem from=\"1612549491780\" duration=\"11039000\" />\n      <workItem from=\"1612673481377\" duration=\"35214000\" />\n      <workItem from=\"1612872800328\" duration=\"20247000\" />\n      <workItem from=\"1612965287945\" duration=\"20182000\" />\n      <workItem from=\"1613143264543\" duration=\"9183000\" />\n      <workItem from=\"1613482246710\" duration=\"20771000\" />\n      <workItem from=\"1613521091648\" duration=\"4029000\" />\n      <workItem from=\"1613577120404\" duration=\"7498000\" />\n      <workItem from=\"1613592953215\" duration=\"4183000\" />\n      <workItem from=\"1613652330452\" duration=\"23264000\" />\n      <workItem from=\"1613765935743\" duration=\"22000\" />\n      <workItem from=\"1613766190843\" duration=\"12675000\" />\n      <workItem from=\"1613865285262\" duration=\"14852000\" />\n      <workItem from=\"1613937464604\" duration=\"4142000\" />\n      <workItem from=\"1614015535804\" duration=\"6378000\" />\n      <workItem from=\"1614083067921\" duration=\"22258000\" />\n      <workItem from=\"1614111218275\" duration=\"3903000\" />\n      <workItem from=\"1614195341016\" duration=\"8687000\" />\n      <workItem from=\"1614220221936\" duration=\"70000\" />\n      <workItem from=\"1614220438850\" duration=\"194000\" />\n      <workItem from=\"1614273566176\" duration=\"11295000\" />\n      <workItem from=\"1614301081576\" duration=\"5947000\" />\n      <workItem from=\"1614345249589\" duration=\"7432000\" />\n      <workItem from=\"1614592761749\" duration=\"10802000\" />\n      <workItem from=\"1614695581330\" duration=\"10118000\" />\n      <workItem from=\"1614786236801\" duration=\"4797000\" />\n      <workItem from=\"1614864244031\" duration=\"3061000\" />\n      <workItem from=\"1614882852123\" duration=\"2037000\" />\n      <workItem from=\"1614900003366\" duration=\"2016000\" />\n      <workItem from=\"1614943863896\" duration=\"20090000\" />\n      <workItem from=\"1615120682083\" duration=\"5797000\" />\n      <workItem from=\"1615139987471\" duration=\"1497000\" />\n      <workItem from=\"1615211768703\" duration=\"8211000\" />\n      <workItem from=\"1615297512132\" duration=\"654000\" />\n      <workItem from=\"1615298190076\" duration=\"16911000\" />\n      <workItem from=\"1615337845940\" duration=\"10655000\" />\n      <workItem from=\"1615423675286\" duration=\"10558000\" />\n      <workItem from=\"1615652316606\" duration=\"7153000\" />\n      <workItem from=\"1615737487687\" duration=\"2902000\" />\n      <workItem from=\"1615750388831\" duration=\"15602000\" />\n      <workItem from=\"1615898700596\" duration=\"5182000\" />\n      <workItem from=\"1616425364721\" duration=\"5726000\" />\n      <workItem from=\"1616431174180\" duration=\"2122000\" />\n      <workItem from=\"1616589025261\" duration=\"345000\" />\n      <workItem from=\"1616592443546\" duration=\"289000\" />\n      <workItem from=\"1616691868571\" duration=\"11854000\" />\n      <workItem from=\"1616710831970\" duration=\"17850000\" />\n      <workItem from=\"1616927892319\" duration=\"12255000\" />\n      <workItem from=\"1617113225092\" duration=\"597000\" />\n      <workItem from=\"1617119060179\" duration=\"24651000\" />\n      <workItem from=\"1617647054828\" duration=\"21657000\" />\n      <workItem from=\"1617803894152\" duration=\"2518000\" />\n      <workItem from=\"1617888359435\" duration=\"20717000\" />\n      <workItem from=\"1617928109000\" duration=\"3683000\" />\n      <workItem from=\"1618163210133\" duration=\"1795000\" />\n      <workItem from=\"1618169379032\" duration=\"3834000\" />\n      <workItem from=\"1618228485126\" duration=\"17229000\" />\n      <workItem from=\"1618250985924\" duration=\"219000\" />\n      <workItem from=\"1618425523080\" duration=\"7055000\" />\n      <workItem from=\"1618519254406\" duration=\"598000\" />\n      <workItem from=\"1618532000309\" duration=\"1257000\" />\n      <workItem from=\"1618586434332\" duration=\"7452000\" />\n      <workItem from=\"1619094344209\" duration=\"12402000\" />\n      <workItem from=\"1619114975561\" duration=\"4465000\" />\n      <workItem from=\"1619198833168\" duration=\"10776000\" />\n      <workItem from=\"1619435774469\" duration=\"19146000\" />\n      <workItem from=\"1619523913552\" duration=\"10677000\" />\n      <workItem from=\"1620920556831\" duration=\"276000\" />\n      <workItem from=\"1622557318225\" duration=\"12752000\" />\n      <workItem from=\"1622624614741\" duration=\"22993000\" />\n      <workItem from=\"1622721225567\" duration=\"11466000\" />\n      <workItem from=\"1623160145538\" duration=\"10572000\" />\n      <workItem from=\"1623182009165\" duration=\"17560000\" />\n      <workItem from=\"1623672894674\" duration=\"2811000\" />\n      <workItem from=\"1623691151489\" duration=\"6070000\" />\n      <workItem from=\"1623758125347\" duration=\"22612000\" />\n      <workItem from=\"1623843958385\" duration=\"21891000\" />\n      <workItem from=\"1623940595994\" duration=\"12643000\" />\n      <workItem from=\"1623982209174\" duration=\"1798000\" />\n      <workItem from=\"1624019917318\" duration=\"22298000\" />\n      <workItem from=\"1624120325522\" duration=\"3421000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Changed documentation style.\">\n      <created>1611343621921</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1611343621921</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Changed documentation style.\">\n      <created>1611343654039</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1611343654039</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Moved up to Rubicon v0.1.7\">\n      <created>1611582659919</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1611582659919</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Moved up to Rubicon v0.1.7\">\n      <created>1611755341014</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1611755341014</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Moved up to Rubicon v0.1.15\">\n      <created>1611755469277</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1611755469277</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Moved up to Rubicon v0.1.17\">\n      <created>1611865852395</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1611865852395</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Moved up to Rubicon v0.1.19\">\n      <created>1611943178797</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1611943178798</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Moved up to Rubicon v0.1.19\">\n      <created>1612674528768</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1612674528768</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Moved up to Rubicon v0.1.25\">\n      <created>1612674563569</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1612674563569</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"More documentation.\">\n      <created>1612707411873</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1612707411873</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Organized the source by function and added more documentation.\">\n      <created>1612979161515</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1612979161515</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Removed /.build/ from GIT.\">\n      <created>1612980188278</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1612980188278</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Removed **/grhodes.xcuserdatad/ from GIT.\">\n      <created>1612980468039</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1612980468040</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Removed **/grhodes.xcuserdatad/ from GIT.\">\n      <created>1612980642280</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1612980642280</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"more doctype elements.\">\n      <created>1613143352551</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613143352551</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Yes, I'm starting over again. Don't judge me. I wasn't happy with what I did and I'm an OCD perfectionist.\">\n      <created>1613482780969</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613482780970</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"This is better.\">\n      <created>1613904707006</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613904707006</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"This is better.\">\n      <created>1613937603359</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613937603359</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"More...\">\n      <created>1614708574194</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614708574194</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"More...\">\n      <created>1614708587487</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614708587487</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Preliminary DTD parsing done.\">\n      <created>1614950114465</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614950114465</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Preliminary DTD parsing done.\">\n      <created>1614966222772</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614966222772</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Cleanup.\">\n      <created>1615738212344</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615738212344</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Cleanup.\">\n      <created>1615738223136</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615738223136</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Cleanup.\">\n      <created>1617744520500</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617744520500</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Cleanup.\">\n      <created>1617744542455</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1617744542455</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"Cleanup.\">\n      <created>1619102351161</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1619102351161</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"Cleanup.\">\n      <created>1619528034550</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1619528034550</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"Cleanup.\">\n      <created>1622660916780</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1622660916780</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"Cleanup.\">\n      <created>1623246209772</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623246209772</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"Cleanup.\">\n      <created>1623246247093</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623246247093</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"Cleanup.\">\n      <created>1623248320807</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623248320807</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"More.\">\n      <created>1623844007257</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623844007257</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"More.\">\n      <created>1623864107903</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623864107903</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"More.\">\n      <created>1623864261049</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623864261049</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\"More.\">\n      <created>1623864705087</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623864705087</updated>\n    </task>\n    <task id=\"LOCAL-00037\" summary=\"More.\">\n      <created>1623865082459</created>\n      <option name=\"number\" value=\"00037\" />\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623865082459</updated>\n    </task>\n    <task id=\"LOCAL-00038\" summary=\"More.\">\n      <created>1623866223071</created>\n      <option name=\"number\" value=\"00038\" />\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623866223071</updated>\n    </task>\n    <task id=\"LOCAL-00039\" summary=\"More.\">\n      <created>1623866586288</created>\n      <option name=\"number\" value=\"00039\" />\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623866586288</updated>\n    </task>\n    <task id=\"LOCAL-00040\" summary=\"More.\">\n      <created>1623866700802</created>\n      <option name=\"number\" value=\"00040\" />\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623866700802</updated>\n    </task>\n    <task id=\"LOCAL-00041\" summary=\"More.\">\n      <created>1623866822310</created>\n      <option name=\"number\" value=\"00041\" />\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623866822310</updated>\n    </task>\n    <task id=\"LOCAL-00042\" summary=\"Tests for Linux\">\n      <created>1623867679742</created>\n      <option name=\"number\" value=\"00042\" />\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623867679742</updated>\n    </task>\n    <task id=\"LOCAL-00043\" summary=\"Tests for Linux\">\n      <created>1623867864146</created>\n      <option name=\"number\" value=\"00043\" />\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623867864146</updated>\n    </task>\n    <task id=\"LOCAL-00044\" summary=\"Tests for Linux\">\n      <created>1623868122454</created>\n      <option name=\"number\" value=\"00044\" />\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623868122454</updated>\n    </task>\n    <task id=\"LOCAL-00045\" summary=\"Tests for Linux\">\n      <created>1623868262810</created>\n      <option name=\"number\" value=\"00045\" />\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623868262810</updated>\n    </task>\n    <task id=\"LOCAL-00046\" summary=\"Latest version of Rubicon.\">\n      <created>1623941023449</created>\n      <option name=\"number\" value=\"00046\" />\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623941023449</updated>\n    </task>\n    <task id=\"LOCAL-00047\" summary=\"More\">\n      <created>1623965749219</created>\n      <option name=\"number\" value=\"00047\" />\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623965749219</updated>\n    </task>\n    <task id=\"LOCAL-00048\" summary=\"More\">\n      <created>1623965759117</created>\n      <option name=\"number\" value=\"00048\" />\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623965759117</updated>\n    </task>\n    <task id=\"LOCAL-00049\" summary=\"More\">\n      <created>1623965786626</created>\n      <option name=\"number\" value=\"00049\" />\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1623965786626</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"50\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\n    <MESSAGE value=\"Changed documentation style.\" />\n    <MESSAGE value=\"Moved up to Rubicon v0.1.7\" />\n    <MESSAGE value=\"Moved up to Rubicon v0.1.15\" />\n    <MESSAGE value=\"Moved up to Rubicon v0.1.17\" />\n    <MESSAGE value=\"Moved up to Rubicon v0.1.19\" />\n    <MESSAGE value=\"Moved up to Rubicon v0.1.25\" />\n    <MESSAGE value=\"More documentation.\" />\n    <MESSAGE value=\"Organized the source by function and added more documentation.\" />\n    <MESSAGE value=\"Removed /.build/ from GIT.\" />\n    <MESSAGE value=\"Removed **/grhodes.xcuserdatad/ from GIT.\" />\n    <MESSAGE value=\"more doctype elements.\" />\n    <MESSAGE value=\"Yes, I'm starting over again. Don't judge me. I wasn't happy with what I did and I'm an OCD perfectionist.\" />\n    <MESSAGE value=\"This is better.\" />\n    <MESSAGE value=\"More...\" />\n    <MESSAGE value=\"Preliminary DTD parsing done.\" />\n    <MESSAGE value=\"Cleanup.\" />\n    <MESSAGE value=\"More.\" />\n    <MESSAGE value=\"Tests for Linux\" />\n    <MESSAGE value=\"Latest version of Rubicon.\" />\n    <MESSAGE value=\"More\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"More\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"com.jetbrains.cidr.execution.debugger.OCBreakpointType\">\n          <url>file://$PROJECT_DIR$/Sources/Gettysburg/SAXParser.swift</url>\n          <line>274</line>\n          <option name=\"timeStamp\" value=\"12\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"com.jetbrains.cidr.execution.debugger.OCBreakpointType\">\n          <url>file://$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElemCont.swift</url>\n          <line>109</line>\n          <option name=\"timeStamp\" value=\"13\" />\n        </line-breakpoint>\n      </breakpoints>\n      <default-breakpoints>\n        <breakpoint enabled=\"true\" log-message=\"true\" type=\"CidrExceptionBreakpoint\" />\n      </default-breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,19 +5,19 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="60b0239b-d5a7-4057-9e21-57829d56877e" name="Default Changelist" comment="More">
-      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/RegexTests.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/RegexTests.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/Gettysburg.iml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Gettysburg.xcodeproj/project.pbxproj" beforeDir="false" afterPath="$PROJECT_DIR$/Gettysburg.xcodeproj/project.pbxproj" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved" beforeDir="false" afterPath="$PROJECT_DIR$/Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Gettysburg.xcodeproj/xcshareddata/xcschemes/RegexTests.xcscheme" beforeDir="false" afterPath="$PROJECT_DIR$/Gettysburg.xcodeproj/xcshareddata/xcschemes/RegexTests.xcscheme" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElementContentItem.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElemCont.swift" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Sources/Gettysburg/Misc/Enums.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/Gettysburg/Misc/Enums.swift" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Package.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Package.swift" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Sources/EntityTool/main.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/EntityTool/main.swift" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElemCont.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElemCont.swift" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Sources/Gettysburg/Misc/Extensions.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/Gettysburg/Misc/Extensions.swift" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Sources/Gettysburg/SAXHandler.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/Gettysburg/SAXHandler.swift" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Sources/Gettysburg/Misc/Tools.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/Gettysburg/Misc/Tools.swift" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Sources/Gettysburg/SAXParser.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/Gettysburg/SAXParser.swift" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Sources/Gettysburg/Validation/CharacterSets.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Sources/Gettysburg/Validation/CharacterSets.swift" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Tests/GettysburgTests/RegexTests.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Tests/GettysburgTests/RegexTests.swift" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Tests/GettysburgTests/GettysburgTests.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Tests/GettysburgTests/GettysburgTests.swift" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Tests/GettysburgTests/SAXTestHandler.swift" beforeDir="false" afterPath="$PROJECT_DIR$/Tests/GettysburgTests/SAXTestHandler.swift" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Tests/GettysburgTests/TestData/Test_UTF-8.xml" beforeDir="false" afterPath="$PROJECT_DIR$/Tests/GettysburgTests/TestData/Test_UTF-8.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -29,7 +29,7 @@
       <option value="directory" />
     </option>
   </component>
-  <component name="ExecutionTargetManager" SELECTED_TARGET="macos_macos_x86_64" />
+  <component name="ExecutionTargetManager" SELECTED_TARGET="macos_macos_arm64" />
   <component name="ExternalProjectsData">
     <projectState path="$PROJECT_DIR$">
       <ProjectState />
@@ -54,11 +54,11 @@
     </file-type-list>
   </component>
   <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/Tests/GettysburgTests/GettysburgTests.swift" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Sources/Gettysburg/Misc/SAXError.swift" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Sources/Gettysburg/IO/SAXCharInputStreamStack.swift" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Sources/Gettysburg/SAXHandler.swift" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Tests/GettysburgTests/TestData/Test_UTF-8.xml" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Sources/Gettysburg/Misc/SAXError.swift" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Tests/GettysburgTests/GettysburgTests.swift" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/Sources/Gettysburg/IO/SAXCharInputStreamStack.swift" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="MacroExpansionManager">
     <option name="directoryName" value="0kgei8de" />
@@ -94,16 +94,16 @@
     <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
     <property name="nodejs_npm_path_reset_for_default_project" value="true" />
     <property name="nodejs_package_manager_path" value="npm" />
-    <property name="settings.editor.selected.configurable" value="preferences.fileTypes" />
+    <property name="settings.editor.selected.configurable" value="configurable.group.editor" />
   </component>
   <component name="RunManager" selected="XCTest.Gettysburg Tests - testParser">
     <list>
-      <item itemvalue="Application.EntityTool" />
       <item itemvalue="Application.DocFixer" />
+      <item itemvalue="Application.EntityTool" />
       <item itemvalue="Application.Gettysburg" />
       <item itemvalue="XCTest.Gettysburg Tests - testParser" />
-      <item itemvalue="XCTest.RegexTests" />
       <item itemvalue="XCTest.Gettysburg Tests - testSAXSimpleIConvCharInputStream" />
+      <item itemvalue="XCTest.RegexTests" />
     </list>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
@@ -211,6 +211,8 @@
       <workItem from="1623982209174" duration="1798000" />
       <workItem from="1624019917318" duration="22298000" />
       <workItem from="1624120325522" duration="3421000" />
+      <workItem from="1624186738917" duration="3288000" />
+      <workItem from="1631361264743" duration="1032000" />
     </task>
     <task id="LOCAL-00001" summary="Changed documentation style.">
       <created>1611343621921</created>
@@ -602,14 +604,14 @@
     <breakpoint-manager>
       <breakpoints>
         <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
-          <url>file://$PROJECT_DIR$/Sources/Gettysburg/SAXParser.swift</url>
-          <line>274</line>
-          <option name="timeStamp" value="12" />
+          <url>file://$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElemCont.swift</url>
+          <line>24</line>
+          <option name="timeStamp" value="18" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
-          <url>file://$PROJECT_DIR$/Sources/Gettysburg/DOM/DocType/SAXDTDElemCont.swift</url>
-          <line>109</line>
-          <option name="timeStamp" value="13" />
+          <url>file://$PROJECT_DIR$/Sources/Gettysburg/SAXParser.swift</url>
+          <line>144</line>
+          <option name="timeStamp" value="19" />
         </line-breakpoint>
       </breakpoints>
       <default-breakpoints>
Index: Tests/GettysburgTests/TestData/Test_UTF-8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<!DOCTYPE Person [\n        <!NOTATION supermanX PUBLIC \"first_is_best\">\n        <!ENTITY compname SYSTEM \"compname.txt\">\n        <!ENTITY compname2 SYSTEM \"compname.txt\" NDATA supermanX>\n        <!ENTITY copyright \"&goofy; 2017 by &compname; Incorporated &smiley;\">\n        <!ENTITY smiley \"\uD83E\uDD29\">\n        <!ENTITY goofy \"\uD83E\uDD2A\">\n        <!ENTITY cowbell PUBLIC \"public_id\" \"compname.txt\">\n        <!ENTITY cowbell2 PUBLIC \"public_id\" \"compname.txt\" NDATA supermanX>\n        <!ATTLIST MiddleName preferred (YES|NO) \"NO\">\n        <!ATTLIST gsr:LastName pgx:type CDATA \"English\">\n        <!ATTLIST pgx:dob pgx:type (Gregorian|Julian) \"Gregorian\">\n        <!ATTLIST bob:dob pgx:type (Gregorian|Julian) \"Julian\">\n        <!ATTLIST bob:info gsr:region (USA|UK|CAN) \"USA\">\n        <!ATTLIST bob:info type CDATA #IMPLIED>\n        <!ATTLIST gsr:LastName gsr:type CDATA #IMPLIED>\n        <!ATTLIST bob:info id ID #REQUIRED><!-- Default can also be \"#IMPLIED\" -->\n        <!ATTLIST usa:family rho:type CDATA #IMPLIED>\n        <!ATTLIST usa:family des:type CDATA #IMPLIED>\n        <!ATTLIST usa:family type CDATA #IMPLIED>\n        <!ELEMENT gsr:Person (gsr:LastName,gsr:FirstName,MiddleName,pgx:dob,bob:info,usa:family,(garfield|odie),ack:Batman,foo?,bar?)>\n        <!ELEMENT foo (ack:Batman)>\n        <!ELEMENT bar (#PCDATA|usa:family)*>\n        <!ELEMENT garfield EMPTY>\n        <!ELEMENT odie ANY>\n        <!ELEMENT gsr:LastName (#PCDATA)>\n        <!ELEMENT gsr:FirstName (#PCDATA)>\n        <!ELEMENT MiddleName (#PCDATA)>\n        <!ELEMENT usa:family (#PCDATA)>\n        <!ELEMENT bob:info (bob:dob,ack:nickname*)>\n        <!ELEMENT bob:dob (#PCDATA)>\n        <!ELEMENT pgx:dob (#PCDATA)>\n        <!ELEMENT ack:nickname (#PCDATA)>\n        <!ELEMENT ack:Batman (#PCDATA)>\n        <!ELEMENT>\n        <!ELEMENT >\n        ]>\n<gsr:Person xmlns:gsr=\"urn:GalenSherardRhodes\"\n            xmlns:usa=\"urn:UnitedStatesOfAmerica\"\n            xmlns:pgx=\"http://pgx.galenrhodes.com\"\n            xmlns:ack=\"urn:dccommics\"\n            xmlns:des=\"urn:rhodes\"\n            xmlns:rho=\"urn:rhodes\"\n            xmlns=\"urn:Canada\">\n    <!-- - -->\n    <gsr:LastName pgx:type=\"German\" gsr:type=\"nickname\">Rhodes</gsr:LastName>\n    <gsr:FirstName>Galen</gsr:FirstName>\n    <MiddleName preferred=\"YES\">Sherard</MiddleName>\n    <pgx:dob pgx:type=\"Julian\">12 December 1967</pgx:dob>\n    <bob:info xmlns:bob=\"urn:minions\" xmlns:ack=\"urn:bill.the.cat\" id=\"1\" type=\"demo\" gsr:region=\"UK\">\n        <bob:dob pgx:type=\"Gregorian\">25 November 1970</bob:dob>\n        <ack:nickname>&smiley;Glenn&smiley;</ack:nickname>\n    </bob:info>\n    <usa:family des:type=\"fam\" rho:type=\"fam\">Galen &copyright; Rhodes</usa:family>\n    <garfield />\n    <ack:Batman>Wonder Woman</ack:Batman>\n</gsr:Person>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tests/GettysburgTests/TestData/Test_UTF-8.xml b/Tests/GettysburgTests/TestData/Test_UTF-8.xml
--- a/Tests/GettysburgTests/TestData/Test_UTF-8.xml	
+++ b/Tests/GettysburgTests/TestData/Test_UTF-8.xml	
@@ -33,8 +33,6 @@
         <!ELEMENT pgx:dob (#PCDATA)>
         <!ELEMENT ack:nickname (#PCDATA)>
         <!ELEMENT ack:Batman (#PCDATA)>
-        <!ELEMENT>
-        <!ELEMENT >
         ]>
 <gsr:Person xmlns:gsr="urn:GalenSherardRhodes"
             xmlns:usa="urn:UnitedStatesOfAmerica"
Index: Sources/EntityTool/main.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/************************************************************************//**\n *     PROJECT: Gettysburg\n *    FILENAME: main.swift\n *         IDE: AppCode\n *      AUTHOR: Galen Rhodes\n *        DATE: 2/7/21\n *\n * Copyright Â© 2021 Galen Rhodes. All rights reserved.\n *\n * Permission to use, copy, modify, and distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *//************************************************************************/\n\nimport Foundation\nimport Rubicon\n\n@usableFromInline let HX: [String] = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\" ]\n\nextension UnsignedInteger {\n    @inlinable func toHex() -> String {\n        var str: String = \"\"\n        let m           = ((bitWidth < 21) ? bitWidth : 21)\n        let ws:  Int    = ((m + 7) / 8)\n        var val         = self\n\n        for x in (0 ..< ws) {\n            let a = Int(truncatingIfNeeded: (val & 0x0f))\n            let b = Int(truncatingIfNeeded: ((val & 0xf0) >> 4))\n            val = (val >> 8)\n            str = \"\\(HX[a])\\(HX[b])\\(str)\"\n        }\n\n        return str\n    }\n}\n\ndo {\n    guard CommandLine.arguments.count > 1 else { fatalError(\"Must specify filename.\") }\n    let data:   String            = try String(contentsOfFile: CommandLine.arguments[1], encoding: String.Encoding.utf8)\n    let regex1: RegularExpression = try RegularExpression(pattern: \"^((?:\\\"[^\\\"]+\\\")|(?:[^,]+)),(.*)\", options: [ NSRegularExpression.Options.anchorsMatchLines ])\n    let regex2: RegularExpression = try RegularExpression(pattern: \"([^,]+),?\")\n    var map:    [String: String]  = [:]\n    var tab:    Int               = 0\n\n    // \"quot\":\t\"\"\"\"\"\"\n    // \"QUOT\":\t\"\"\"\"\"\"\n    // \"comma\":\t\"\",\"\"\n    // \"Tab\":\t\"\"\n    // \"NewLine\":\t\"\"\n    // \"nbsp\":\t\"\"\n    // \"NonBreakingSpace\":\t\"\"\n    // \"shy\":\t\"\"\n    //\n    regex1.forEachMatch(in: data) { (match: RegularExpression.Match) in\n        let name            = (match[1].subString ?? \"\\(UnicodeReplacementChar)\").trimmed\n        let entity          = (match[2].subString ?? \"\")\n        var names: [String] = []\n\n        if name[name.startIndex] == \"\\\"\" {\n            let s = String(name[name.index(after: name.startIndex) ..< name.index(before: name.endIndex)])\n            let m = regex2.matches(in: s)\n            for match in m { names <+ match[1].subString!.trimmed }\n        }\n        else {\n            names <+ name.trimmed\n        }\n\n        for n in names {\n            tab = max(tab, n.count)\n\n            switch n {\n                case \"quot\", \"QUOT\":             map[n] = \"\\\\\\\"\"\n                case \"comma\":                    map[n] = \",\"\n                case \"Tab\":                      map[n] = \"\\\\t\"\n                case \"NewLine\":                  map[n] = \"\\\\n\"\n                case \"bsol\":                     map[n] = \"\\\\\\\\\"\n                case \"nbsp\", \"NonBreakingSpace\": map[n] = String(Character(scalar: UnicodeScalar(UInt8(0xa0))))\n                case \"shy\":                      map[n] = String(Character(scalar: UnicodeScalar(UInt8(0xad))))\n                default:                         map[n] = entity\n            }\n        }\n\n        return false\n    }\n\n    let spc:    String = \"                                                                                                                                         \"\n    var output: String = \"\"\"\n                         /************************************************************************//**\n                          *     PROJECT: Gettysburg\n                          *    FILENAME: XMLEntities.swift\n                          *         IDE: AppCode\n                          *      AUTHOR: Galen Rhodes\n                          *        DATE: 2/7/21\n                          *\n                          * Copyright Â© 2021 Galen Rhodes. All rights reserved.\n                          *\n                          * Permission to use, copy, modify, and distribute this software for any\n                          * purpose with or without fee is hereby granted, provided that the above\n                          * copyright notice and this permission notice appear in all copies.\n                          *\n                          * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n                          * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n                          * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n                          * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n                          * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n                          * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n                          * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n                          *//************************************************************************/\n\n                         import Foundation\n                         import CoreFoundation\n                         import Rubicon\n                         #if os(Windows)\n                             import WinSDK\n                         #endif\n\n                         //@f:0\n                         @usableFromInline let ENTITY_MAP: [String:String] = [\n                         \"\"\"\n\n    for (name, entity) in map {\n        let x: Int = (tab - name.count)\n        output += \"\\n    \\\"\\(name)\\\"\\(String(spc[spc.startIndex ..< spc.index(spc.startIndex, offsetBy: x)])): \\\"\"\n        for sc in entity.unicodeScalars {\n            output += \"\\\\u{\\(sc.value.toHex())}\"\n        }\n        output += \"\\\",\"\n    }\n    output += \"\\n]\\n//@f:1\\n\"\n\n    try output.write(toFile: \"Sources/Gettysburg/Tools/XMLEntities.swift\", atomically: false, encoding: .utf8)\n}\ncatch let e {\n    fatalError(\"ERROR: \\(e.localizedDescription)\")\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sources/EntityTool/main.swift b/Sources/EntityTool/main.swift
--- a/Sources/EntityTool/main.swift	
+++ b/Sources/EntityTool/main.swift	
@@ -32,7 +32,7 @@
         let ws:  Int    = ((m + 7) / 8)
         var val         = self
 
-        for x in (0 ..< ws) {
+        for _ in (0 ..< ws) {
             let a = Int(truncatingIfNeeded: (val & 0x0f))
             let b = Int(truncatingIfNeeded: ((val & 0xf0) >> 4))
             val = (val >> 8)
@@ -46,8 +46,8 @@
 do {
     guard CommandLine.arguments.count > 1 else { fatalError("Must specify filename.") }
     let data:   String            = try String(contentsOfFile: CommandLine.arguments[1], encoding: String.Encoding.utf8)
-    let regex1: RegularExpression = try RegularExpression(pattern: "^((?:\"[^\"]+\")|(?:[^,]+)),(.*)", options: [ NSRegularExpression.Options.anchorsMatchLines ])
-    let regex2: RegularExpression = try RegularExpression(pattern: "([^,]+),?")
+    let regex1: RegularExpression = RegularExpression(pattern: "^((?:\"[^\"]+\")|(?:[^,]+)),(.*)", options: .anchorsMatchLines)!
+    let regex2: RegularExpression = RegularExpression(pattern: "([^,]+),?")!
     var map:    [String: String]  = [:]
     var tab:    Int               = 0
 
@@ -60,15 +60,16 @@
     // "NonBreakingSpace":	""
     // "shy":	""
     //
-    regex1.forEachMatch(in: data) { (match: RegularExpression.Match) in
+    regex1.forEachMatch(in: data) { (m, _, _) in
+        guard let match = m else { return }
         let name            = (match[1].subString ?? "\(UnicodeReplacementChar)").trimmed
         let entity          = (match[2].subString ?? "")
         var names: [String] = []
 
         if name[name.startIndex] == "\"" {
             let s = String(name[name.index(after: name.startIndex) ..< name.index(before: name.endIndex)])
-            let m = regex2.matches(in: s)
-            for match in m { names <+ match[1].subString!.trimmed }
+            let r = regex2.matches(in: s)
+            for m1 in r { names <+ m1[1].subString!.trimmed }
         }
         else {
             names <+ name.trimmed
@@ -88,8 +89,6 @@
                 default:                         map[n] = entity
             }
         }
-
-        return false
     }
 
     let spc:    String = "                                                                                                                                         "
Index: Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"object\": {\n    \"pins\": [\n      {\n        \"package\": \"PGDocFixer\",\n        \"repositoryURL\": \"https://github.com/GalenRhodes/PGDocFixer.git\",\n        \"state\": {\n          \"branch\": null,\n          \"revision\": \"b2707d225c2b4bbe5771b6759c34174b65a29498\",\n          \"version\": \"1.0.10\"\n        }\n      },\n      {\n        \"package\": \"RingBuffer\",\n        \"repositoryURL\": \"https://github.com/GalenRhodes/RingBuffer\",\n        \"state\": {\n          \"branch\": null,\n          \"revision\": \"3c04eb34820e7005525aad7bf1304a8a596cbb94\",\n          \"version\": \"1.0.11\"\n        }\n      },\n      {\n        \"package\": \"Rubicon\",\n        \"repositoryURL\": \"https://github.com/GalenRhodes/Rubicon.git\",\n        \"state\": {\n          \"branch\": null,\n          \"revision\": \"b6f436d76f12d796e3648fa6bbc7b7ee388138a9\",\n          \"version\": \"0.2.44\"\n        }\n      }\n    ]\n  },\n  \"version\": 1\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved b/Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
--- a/Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved	
+++ b/Gettysburg.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved	
@@ -2,12 +2,30 @@
   "object": {
     "pins": [
       {
+        "package": "Chadakoin",
+        "repositoryURL": "https://github.com/GalenRhodes/Chadakoin",
+        "state": {
+          "branch": null,
+          "revision": "94f2d763da44399385e679bd6a606ab7a5f9a2cb",
+          "version": "1.0.5"
+        }
+      },
+      {
         "package": "PGDocFixer",
         "repositoryURL": "https://github.com/GalenRhodes/PGDocFixer.git",
         "state": {
           "branch": null,
-          "revision": "b2707d225c2b4bbe5771b6759c34174b65a29498",
-          "version": "1.0.10"
+          "revision": "9a5f8b761ddaaadb883fc01f733b5fcbf46d2b3a",
+          "version": "1.0.11"
+        }
+      },
+      {
+        "package": "RedBlackTree",
+        "repositoryURL": "https://github.com/GalenRhodes/RedBlackTree",
+        "state": {
+          "branch": null,
+          "revision": "0686f178e9d40693de9345494f218c5ecce9dae2",
+          "version": "2.0.2"
         }
       },
       {
@@ -15,8 +33,8 @@
         "repositoryURL": "https://github.com/GalenRhodes/RingBuffer",
         "state": {
           "branch": null,
-          "revision": "3c04eb34820e7005525aad7bf1304a8a596cbb94",
-          "version": "1.0.11"
+          "revision": "6e2942abcb75b1edcda2e2d15c5210f8542e92e2",
+          "version": "1.0.12"
         }
       },
       {
@@ -24,8 +42,8 @@
         "repositoryURL": "https://github.com/GalenRhodes/Rubicon.git",
         "state": {
           "branch": null,
-          "revision": "b6f436d76f12d796e3648fa6bbc7b7ee388138a9",
-          "version": "0.2.44"
+          "revision": "cdff87a5a441eeea60af7fcdf0ba015e0fbcd40e",
+          "version": "0.7.0"
         }
       }
     ]
Index: Package.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// swift-tools-version:5.4\n// The swift-tools-version declares the minimum version of Swift required to build this package.\n\nimport PackageDescription\n\n//@f:0\nlet package = Package(\n    name: \"Gettysburg\",\n    platforms: [ .macOS(.v10_15), .tvOS(.v13), .iOS(.v13), .watchOS(.v6) ],\n    products: [\n        .library(name: \"Gettysburg\", targets: [ \"Gettysburg\" ]),\n    ],\n    dependencies: [\n        .package(name: \"Rubicon\", url: \"https://github.com/GalenRhodes/Rubicon.git\", .upToNextMinor(from: \"0.2.43\")),\n    ],\n    targets: [\n        .target(name: \"Gettysburg\", dependencies: [ \"Rubicon\" ], exclude: [ \"Info.plist\", ]),\n        .testTarget(name: \"GettysburgTests\", dependencies: [ \"Gettysburg\" ], exclude: [ \"Info.plist\", ], resources: [ .copy(\"TestData\"), ]),\n    ])\n//@f:1\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Package.swift b/Package.swift
--- a/Package.swift	
+++ b/Package.swift	
@@ -11,10 +11,11 @@
         .library(name: "Gettysburg", targets: [ "Gettysburg" ]),
     ],
     dependencies: [
-        .package(name: "Rubicon", url: "https://github.com/GalenRhodes/Rubicon.git", .upToNextMinor(from: "0.2.43")),
+        .package(name: "Rubicon", url: "https://github.com/GalenRhodes/Rubicon.git", .upToNextMinor(from: "0.7.0")),
+        .package(name: "RedBlackTree", url: "https://github.com/GalenRhodes/RedBlackTree.git", .upToNextMinor(from: "2.0.2")),
     ],
     targets: [
-        .target(name: "Gettysburg", dependencies: [ "Rubicon" ], exclude: [ "Info.plist", ]),
+        .target(name: "Gettysburg", dependencies: [ "Rubicon", "RedBlackTree", ], exclude: [ "Info.plist", ]),
         .testTarget(name: "GettysburgTests", dependencies: [ "Gettysburg" ], exclude: [ "Info.plist", ], resources: [ .copy("TestData"), ]),
     ])
 //@f:1
Index: Sources/Gettysburg/SAXParser.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*******************************************************************************************************************************************************************************//*\n *     PROJECT: Gettysburg\n *    FILENAME: SAXParser.swift\n *         IDE: AppCode\n *      AUTHOR: Galen Rhodes\n *        DATE: 6/1/21\n *\n * Copyright Â© 2021 Galen Rhodes. All rights reserved.\n *\n * Permission to use, copy, modify, and distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this\n * permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO\n * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *//******************************************************************************************************************************************************************************/\n\nimport Foundation\nimport CoreFoundation\nimport Rubicon\n\nopen class SAXParser {\n\n    @usableFromInline typealias NSMappingList = Set<NSMapping>\n\n    public var xmlVersion:      String { _xmlVersion }\n    public var xmlEncoding:     String { _xmlEncoding }\n    public var xmlIsStandalone: Bool { _xmlIsStandalone }\n    public let handler:         SAXHandler\n\n    open var url:      URL { inputStream.url }\n    open var baseURL:  URL { inputStream.baseURL }\n    open var filename: String { inputStream.filename }\n\n    @usableFromInline let inputStream:      SAXCharInputStreamStack\n    @usableFromInline var namespaceStack:   [NSMappingList] = []\n    @usableFromInline var _xmlVersion:      String          = \"1.1\"\n    @usableFromInline var _xmlEncoding:     String          = \"UTF-8\"\n    @usableFromInline var _xmlIsStandalone: Bool            = true\n\n    /*===========================================================================================================================================================================*/\n    public init(inputStream: InputStream, url: URL, handler: SAXHandler) throws {\n        nDebug(.In, \"SAXParser.init\")\n        defer { nDebug(.Out, \"SAXParser.init\") }\n        self.inputStream = try SAXCharInputStreamStack(initialInputStream: inputStream, url: url)\n        self._xmlEncoding = self.inputStream.encodingName\n        self.handler = handler\n    }\n\n    /*===========================================================================================================================================================================*/\n    public convenience init(url: URL, handler: SAXHandler) throws {\n        guard let _is = InputStream(url: url) else { throw StreamError.FileNotFound(description: url.absoluteString) }\n        try self.init(inputStream: _is, url: url.absoluteURL, handler: handler)\n    }\n\n    /*===========================================================================================================================================================================*/\n    public convenience init(fileAtPath: String, handler: SAXHandler) throws {\n        guard let _is = InputStream(fileAtPath: fileAtPath) else { throw StreamError.FileNotFound(description: fileAtPath) }\n        try self.init(inputStream: _is, url: GetFileURL(filename: fileAtPath), handler: handler)\n    }\n\n    /*===========================================================================================================================================================================*/\n    public convenience init(data: Data, url: URL? = nil, handler: SAXHandler) throws {\n        let _url = (url ?? URL(fileURLWithPath: \"temp_\\(UUID().uuidString).xml\", isDirectory: false, relativeTo: GetCurrDirURL()))\n        try self.init(inputStream: InputStream(data: data), url: _url, handler: handler)\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Parse the XML document from the given input stream.\n    ///\n    /// - Throws: If an error occured.\n    ///\n    open func parse() throws {\n        do {\n            inputStream.open()\n            defer { inputStream.close() }\n\n            try getXmlDeclaration()\n            markSet()\n            defer { markDelete() }\n\n            var hasDocType:  Bool = false\n            var hasRootElem: Bool = false\n\n            while let ch = try inputStream.read() {\n                switch ch {\n                    case \"<\": try handleRootNodeItem(&hasDocType, &hasRootElem)\n                    default:  guard ch.isXmlWhitespace else { throw unexpectedCharacterError(character: ch) }\n                }\n                markUpdate()\n            }\n        }\n        catch let e {\n            guard handler.handleError(self, error: e) else { throw e }\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Parse a root node item.\n    ///\n    /// - Parameters:\n    ///   - hasDocType: A flag that indicates the DOCTYPE node has already been found.\n    ///   - hasRootElem: A flag that indicates the root element node has already been found.\n    /// - Throws: If an I/O error occurs or the root node item is malformed.\n    ///\n    private func handleRootNodeItem(_ hasDocType: inout Bool, _ hasRootElem: inout Bool) throws {\n        guard let ch = try inputStream.read() else { throw SAXError.getUnexpectedEndOfInput() }\n\n        switch ch {\n            case \"!\":\n                guard let ch = try inputStream.read() else { throw SAXError.getUnexpectedEndOfInput() }\n                switch ch {\n                    case \"-\":\n                        markBackup(count: 3)\n                        try handleComment()\n                    case \"D\":\n                        markBackup(count: 3)\n                        try handleDocType()\n                    default:\n                        throw unexpectedCharacterError(character: ch)\n                }\n                break\n            case \"?\":\n                markBackup(count: 2)\n                try handleProcessingInstruction()\n            default:\n                guard ch.isXmlNameStartChar else { throw unexpectedCharacterError(character: ch) }\n                guard !hasRootElem else { throw SAXError.getMalformedDocument(markBackup(count: 2), description: \"Document already has a root element.\") }\n                markBackup(count: 2)\n                try handleNestedElement()\n                hasRootElem = true\n                break\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func handleDocType() throws {\n        var buffer: [Character] = []\n        guard try inputStream.read(chars: &buffer, maxLength: 10) == 10 else { throw SAXError.getUnexpectedEndOfInput() }\n        guard try String(buffer).matches(pattern: \"^\\\\<\\\\!DOCTYPE\\\\s+\") else { throw SAXError.getMalformedDocType(markReset(), description: \"Not a DOCTYPE element: \\\"\\(String(buffer))\\\"\") }\n        guard let elem = try nextIdentifier(leadingWhitespace: .Allowed) else { throw SAXError.getMalformedDocType(markReset(), description: \"Missing root element.\") }\n        guard let ch = try read(leadingWhitespace: .Required) else { throw SAXError.getUnexpectedEndOfInput() }\n        switch ch {\n            case \"[\": try handleInternalDocType(rootElement: elem)\n            case \"S\": markBackup(); try handleExternalSystemDocType(rootElement: elem)\n            case \"P\": markBackup(); try handleExternalPublicDocType(rootElement: elem)\n            default: throw SAXError.getMalformedDocType(markBackup(), description: unexpectedCharMessage(character: ch))\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func handleExternalSystemDocType(rootElement elem: String) throws {\n        guard let tp = try nextIdentifier(leadingWhitespace: .None) else { throw SAXError.getMalformedDocType(markReset(), description: \"Missing external type.\") }\n        guard tp == \"SYSTEM\" else { throw SAXError.getMalformedDocType(markReset(), description: \"Incorrect external type: \\\"\\(tp)\\\"\") }\n        let url = try readSystemID()\n        let ws  = try readWhitespace()\n        guard let ch = try inputStream.read() else { throw SAXError.getUnexpectedEndOfInput() }\n\n        if ch == \"[\" {\n            guard ws else { throw SAXError.getMissingWhitespace(markBackup()) }\n            try handleInternalDocType(rootElement: elem)\n        }\n        else if ch != \">\" {\n            throw SAXError.getMalformedDocType(markBackup(), description: unexpectedCharMessage(character: ch))\n        }\n\n        let body = try GetExternalFile(parentStream: inputStream, url: url)\n        try parseDocType(rootElement: elem, body: body, url: url)\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func handleExternalPublicDocType(rootElement elem: String) throws {\n        markUpdate()\n        guard let tp = try nextIdentifier(leadingWhitespace: .None) else { throw SAXError.getMalformedDocType(markReset(), description: \"Missing external type.\") }\n        guard tp == \"PUBLIC\" else { throw SAXError.getMalformedDocType(markReset(), description: \"Incorrect external type: \\\"\\(tp)\\\"\") }\n        guard let pid = try nextQuotedValue(leadingWhitespace: .Required) else { throw SAXError.getMalformedURL(inputStream, description: \"Missing public ID.\") }\n        let url = try readSystemID()\n        guard let ch = try read(leadingWhitespace: .Allowed) else { throw SAXError.getUnexpectedEndOfInput() }\n        guard ch == \">\" else { throw SAXError.getMalformedDocType(markBackup(), description: unexpectedCharMessage(character: ch)) }\n        let body = try GetExternalFile(parentStream: inputStream, url: url)\n        try parseDocType(rootElement: elem, body: body, name: pid, url: url)\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func handleInternalDocType(rootElement elem: String) throws {\n        var buffer: [Character]  = []\n        let pos:    TextPosition = inputStream.position\n\n        while let ch = try inputStream.read() {\n            if ch == \"]\" {\n                guard let ch = try inputStream.read() else { throw SAXError.getUnexpectedEndOfInput() }\n                if ch == \">\" { return try parseDocType(rootElement: elem, body: String(buffer), position: pos) }\n                buffer <+ \"]\"\n                buffer <+ ch\n            }\n            buffer <+ ch\n        }\n\n        throw SAXError.getUnexpectedEndOfInput()\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func parseDocType(rootElement elem: String, body: String, name: String? = nil, url: URL? = nil, position pos: TextPosition = (0, 0)) throws {\n        let pattern             = \"<!--(.*?)-->|<!(ELEMENT|ENTITY|ATTLIST|NOTATION)(?:\\\\s+([^>]*))?>\"\n        let regex               = GetRegularExpression(pattern: pattern, options: [ .dotMatchesLineSeparators ])\n        var last:  String.Index = body.startIndex\n        var error: Error?       = nil\n        var pos                 = pos\n\n        regex.forEachMatch(in: body) { match, _, stop in\n            if let match = match {\n                do {\n                    try body[last ..< match.range.lowerBound].forEach { ch in\n                        guard ch.isXmlWhitespace else { throw SAXError.MalformedDocType(position: pos, description: unexpectedCharMessage(character: ch)) }\n                        textPositionUpdate(ch, pos: &pos, tabWidth: 4)\n                    }\n\n                    if let rComment = match[1].range {\n                        let comment = String(body[rComment])\n                        try _foo01(body: body, startIndex: match.range.lowerBound, comment: comment, rComment: rComment, position: pos)\n                        handler.comment(self, content: comment)\n                    }\n                    else if let rType = match[2].range {\n                        let type = String(body[rType])\n                        if let rData = match[3].range {\n                            let rToData = (match.range.lowerBound ..< rData.lowerBound)\n                            let pData   = GetPosition(from: body, range: rToData, startingAt: pos)\n                            let sData   = String(body[rData]).trimmingCharacters(in: .XMLWhitespace)\n\n                            switch type {\n                                case \"ELEMENT\": try parseDocTypeElement(rootElement: elem, body: sData, name: name, url: url, position: pData)\n                                case \"ENTITY\":  try parseDocTypeEntity(rootElement: elem, body: sData, name: name, url: url, position: pData)\n                                case \"ATTLIST\": try parseDocTypeAttList(rootElement: elem, body: sData, name: name, url: url, position: pData)\n                                default:        try parseDocTypeNotation(rootElement: elem, body: sData, name: name, url: url, position: pData)\n                            }\n                        }\n                        else {\n                            throw SAXError.MalformedDocType(position: pos, description: \"Empty DTD \\(type) Decl.\")\n                        }\n                    }\n\n                    AdvancePosition(from: body, range: match.range, position: &pos)\n                    last = match.range.upperBound\n                }\n                catch let e {\n                    error = e\n                    stop = true\n                }\n            }\n        }\n\n        if let e = error { throw e }\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func _foo01(body: String, startIndex: String.Index, comment: String, rComment: Range<String.Index>, position pos: TextPosition) throws {\n        if let rx = comment.range(of: \"--\") {\n            let d = comment.distance(from: startIndex, to: rx.lowerBound)\n            let p = GetPosition(from: body, range: startIndex ..< body.index(startIndex, offsetBy: d), startingAt: pos)\n            throw SAXError.MalformedComment(position: p, description: \"Comment cannot contain double minus (-) signs.\")\n        }\n        else if comment.hasSuffix(\"-\") {\n            let p = GetPosition(from: body, range: startIndex ..< rComment.lowerBound, startingAt: pos)\n            throw SAXError.MalformedComment(position: p, description: \"Comment cannot contain double minus (-) signs.\")\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func parseDocTypeElement(rootElement elem: String, body: String, name: String? = nil, url: URL? = nil, position pos: TextPosition) throws {\n        let p = \"(\\(rxNamePattern))\\\\s+(EMPTY|ANY|\\\\([^>]+)\"\n        guard let m = GetRegularExpression(pattern: p).firstMatch(in: body) else { throw SAXError.MalformedEntityDecl(position: pos, description: \"<!ELEMENT \\(body)>\") }\n        guard let name = m[1].subString else { fatalError(\"Incorrect ELEMENT REGEX\") }\n        guard let elst = m[2].subString else { fatalError(\"Incorrect ELEMENT REGEX\") }\n        let type = SAXElementAllowedContent.valueFor(description: elst)\n        let elems = (value(type, isOneOf: .Elements, .Mixed) ? try ParseDTDElementContentList(position: pos, list: elst) : nil)\n        handler.dtdElementDecl(self, name: name, allowedContent: type, content: elems)\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func parseDocTypeAttList(rootElement elem: String, body: String, name: String? = nil, url: URL? = nil, position pos: TextPosition) throws {\n        let p0 = \"(\\(rxNamePattern))\"\n        let p1 = \"(?:\\\\([^|)]+(?:\\\\|[^|)]+)*\\\\))\"\n        let p2 = \"(CDATA|ID|IDREF|IDREFS|ENTITY|ENTITIES|NMTOKEN|NMTOKENS|NOTATION|\\(p1))\"\n        let p3 = \"(\\\\#REQUIRED|\\\\#IMPLIED|(?:(?:(#FIXED)\\\\s+)?\\(rxQuotedString)))\"\n        let p  = \"\\(p0)\\\\s+\\(p0)\\\\s+\\(p2)\\\\s+\\(p3)\"\n\n        guard let m = GetRegularExpression(pattern: p).firstMatch(in: body) else { throw SAXError.MalformedEntityDecl(position: pos, description: \"<!ATTLIST \\(body)>\") }\n        guard let elem = m[1].subString else { fatalError(\"Incorrect ATTLIST REGEX\") }\n        guard let name = m[2].subString else { fatalError(\"Incorrect ATTLIST REGEX\") }\n        guard let tpNm = m[3].subString, let type = SAXAttributeType.valueFor(description: tpNm) else { fatalError(\"Incorrect ATTLIST REGEX\") }\n        guard let defv = m[5].subString ?? m[4].subString else { fatalError(\"Incorrect ATTLIST REGEX\") }\n\n        handler.dtdAttributeDecl(self, name: name, elementName: elem, type: type, enumList: type.enumList(tpNm), defaultType: .valueFor(description: defv), defaultValue: m[6].subString)\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func parseDocTypeEntity(rootElement elem: String, body: String, name: String? = nil, url: URL? = nil, position pos: TextPosition) throws {\n        let p0 = \"(\\(rxNamePattern))\"\n        let p1 = \"\\\\s+\\(rxQuotedString)\"\n        let p2 = \"(?:\\(p1))\"\n        let p3 = \"\\\\s+(?:(?:(SYSTEM)|(PUBLIC)\\(p1))\\(p1))\"\n        let p4 = \"(?:\\\\s+(NDATA)\\\\s+\\(p0))?\"\n        let p5 = \"(?:\\(p3)\\(p4))\"\n        let p6 = \"(?:\\(p3))\"\n        let p7 = \"\\(p0)(?:\\(p2)|\\(p5))\"\n        let p8 = \"(\\\\%)\\\\s+\\(p0)(?:\\(p2)|\\(p6))\"\n        let p  = \"(?:\\(p7)|\\(p8))\"\n        guard let m = GetRegularExpression(pattern: p).firstMatch(in: body) else { throw SAXError.MalformedEntityDecl(position: pos, description: \"<!ENTITY \\(body)>\") }\n\n        let i:    Int           = (m[1].subString == nil ? 10 : 1)\n        let type: SAXEntityType = ((i == 1) ? .General : .Parameter)\n        guard let name = m[i].subString else { throw SAXError.MalformedEntityDecl(position: pos, description: \"<!ENTITY \\(body)>\") }\n\n        if let value = m[i + 1].subString?.deQuoted() {\n            handler.dtdInternalEntityDecl(self, name: name, type: type, content: value)\n        }\n        else if (i == 1 && m[7].subString == \"NDATA\"), let sid = m[6].subString?.deQuoted(), let note = m[8].subString?.deQuoted() {\n            handler.dtdUnparsedEntityDecl(self, name: name, publicId: m[5].subString?.deQuoted(), systemId: sid, notation: note)\n        }\n        else if (m[i + 2].subString == \"SYSTEM\" || m[i + 3].subString == \"PUBLIC\"), let sid = m[i + 5].subString?.deQuoted() {\n            handler.dtdExternalEntityDecl(self, name: name, type: type, publicId: m[i + 4].subString?.deQuoted(), systemId: sid)\n        }\n        else {\n            throw SAXError.MalformedEntityDecl(position: pos, description: \"<!ENTITY \\(body)>\")\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    private func parseDocTypeNotation(rootElement elem: String, body: String, name: String? = nil, url: URL? = nil, position pos: TextPosition) throws {\n        let p = \"(\\(rxNamePattern))\\\\s+(SYSTEM|PUBLIC)\\\\s+(\\(rxQuotedString))(?:\\\\s+(\\(rxQuotedString)))?\"\n        guard let m = GetRegularExpression(pattern: p).firstMatch(in: body) else { throw SAXError.MalformedNotationDecl(position: pos, description: \"<!NOTATION \\(body)>\") }\n        guard let name = m[1].subString else { fatalError(\"Incorrect NOTATION REGEX\") }\n        guard let type = m[2].subString else { fatalError(\"Incorrect NOTATION REGEX\") }\n        guard let prm1 = m[3].subString?.deQuoted() else { fatalError(\"Incorrect NOTATION REGEX\") }\n        let prm2 = m[4].subString?.deQuoted()\n\n        switch type {\n            case \"SYSTEM\":\n                guard prm2 == nil else { throw SAXError.MalformedNotationDecl(position: pos, description: \"Extra parameter in system notation: \\\"\\(prm2!)\\\"\") }\n                handler.dtdNotationDecl(self, name: name, publicId: nil, systemId: prm1)\n            case \"PUBLIC\":\n                handler.dtdNotationDecl(self, name: name, publicId: prm1, systemId: prm2)\n            default:\n                throw SAXError.MalformedNotationDecl(position: pos, description: \"Invalid notation type: \\\"\\(type)\\\"\")\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Parse a nested element.\n    ///\n    /// - Throws: If there is an I/O error or the element is malformed.\n    ///\n    private func handleNestedElement() throws {\n        guard let ch = try inputStream.read() else { return }\n        guard ch == \"<\" else { throw unexpectedCharacterError(character: ch) }\n        guard let tagName = try nextIdentifier() else { throw SAXError.getMalformedDocument(markReset(), description: \"Missing element tag name.\") }\n        try handleElementAttributes(tagName: tagName)\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Handle the attributes of an element tag. In the example:\n    /// ```\n    /// <SomeElement attr1=\"value1\" attr2=\"value2\">\n    /// ```\n    /// Everything after `<SomeElement ` up to the closing character, `>`, are the element attributes.\n    ///\n    /// - Parameter tagName: The name of the element.\n    /// - Throws: If an I/O error occurs or if the element tag is malformed.\n    ///\n    private func handleElementAttributes(tagName: String) throws {\n        var attribs: SAXRawAttribList = []\n\n        repeat {\n            let ws = try readWhitespace()\n            guard let ch = try inputStream.read() else { throw SAXError.getUnexpectedEndOfInput() }\n\n            if ch == \">\" {\n                try callElementBeginHandler(tagName: tagName, attributes: attribs)\n                try handleElementBody(tagName: tagName, attributes: attribs)\n                try callElementEndHandler(tagName: tagName)\n                return\n            }\n            else if ch == \"/\" {\n                guard try getChar(errorOnEOF: true, allowed: \">\") != nil else { throw unexpectedCharacterError() }\n                try callElementBeginHandler(tagName: tagName, attributes: attribs)\n                try callElementEndHandler(tagName: tagName)\n                // This is an empty element and has no body.\n                return\n            }\n            else if ch.isXmlNameStartChar {\n                guard ws else { throw SAXError.getMalformedDocument(markBackup(), description: \"Whitespace was expected.\") }\n                markBackup()\n                guard let key = try nextIdentifier() else { throw SAXError.getMalformedDocument(markBackup(), description: \"Missing Attribute Name\") }\n                guard let ch = try inputStream.read() else { throw SAXError.getUnexpectedEndOfInput() }\n                guard ch == \"=\" else { throw unexpectedCharacterError(character: ch) }\n                guard let value = try nextQuotedValue() else { throw SAXError.getMalformedDocument(markBackup(), description: \"Missing Attribute Value\") }\n                attribs <+ (SAXNSName(name: key), value)\n            }\n        } while true\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Call the handler's `beginPrefixMapping(_:mapping:)` and `beginElement(_:name:attributes:)` methods. If needed, one or more calls to `beginPrefixMapping(_:mapping:)` will\n    /// be made **BEFORE** the call to `beginElement(_:name:attributes:)`.\n    ///\n    /// - Parameters:\n    ///   - tagName: The name of the element.\n    ///   - attr: The attributes of the element.\n    /// - Throws: If an I/O error occurs.\n    ///\n    private func callElementBeginHandler(tagName: String, attributes attribs: SAXRawAttribList) throws {\n        // Go through the attributes and see if there are any namespaces that need to be processed.\n        var fAttribs: SAXRawAttribList = []\n        var mappings: NSMappingList    = NSMappingList()\n\n        for a: SAXRawAttribute in attribs {\n            let uri = a.value.trimmed\n            if uri.isNotEmpty {\n                if a.name.prefix == \"xmlns\" { mappings.insert(NSMapping(prefix: a.name.localName, uri: uri)) }\n                else if a.name.name == \"xmlns\" { mappings.insert(NSMapping(prefix: \"\", uri: uri)) }\n                else { fAttribs <+ a }\n            }\n            else {\n                fAttribs <+ a\n            }\n        }\n\n        namespaceStack <+ mappings\n        for m in mappings.sorted() { handler.beginPrefixMapping(self, mapping: m) }\n        handler.beginElement(self, name: SAXNSName(name: tagName), attributes: fAttribs)\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Call the handler's `endElement(_:name:)` and `endPrefixMapping(_:prefix:)` methods. If needed, one or more calls to `endPrefixMapping(_:prefix:)` will be made **AFTER**\n    /// the call to `endElement(_:name:)`.\n    ///\n    /// - Parameter tagName: The name of the element.\n    /// - Throws: If an I/O error occurs.\n    ///\n    private func callElementEndHandler(tagName: String) throws {\n        handler.endElement(self, name: SAXNSName(name: tagName))\n        if let e = namespaceStack.popLast() { for m in e.sorted().reversed() { handler.endPrefixMapping(self, prefix: m.prefix) } }\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Handle the body of an element.\n    ///\n    /// - Parameters:\n    ///   - tagName: The name of the element.\n    ///   - attr: The attributes of the element.\n    /// - Throws: If an I/O error occurs or anything in the body of the element is malformed.\n    ///\n    private func handleElementBody(tagName: String, attributes attr: SAXRawAttribList) throws {\n        markSet()\n        defer { markDelete() }\n        var text: [Character] = []\n\n        while var ch = try inputStream.read() {\n            switch ch {\n                case \"<\":\n                    handler.text(self, content: String(text))\n                    text.removeAll(keepingCapacity: true)\n                    ch = try readX()\n\n                    switch ch {\n                        case \"!\":\n                            ch = try readX()\n                            switch ch {\n                                case \"-\":\n                                    markBackup(count: 3)\n                                    try handleComment()\n                                case \"[\":\n                                    markBackup(count: 3)\n                                    try handleCDataSection()\n                                default:\n                                    throw unexpectedCharacterError(character: ch)\n                            }\n                        case \"?\":\n                            markBackup(count: 2)\n                            try handleProcessingInstruction()\n                        case \"/\":\n                            markBackup(count: 2)\n                            try handleClosingTag(tagName: tagName)\n                        default:\n                            guard ch.isXmlNameStartChar else { throw unexpectedCharacterError(character: ch) }\n                            markBackup(count: 2)\n                            try handleNestedElement()\n                    }\n                case \"&\":\n                    text.append(contentsOf: try readEntityChar())\n                default:\n                    text <+ ch\n            }\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Handle an element closing tag.\n    ///\n    /// - Parameter tagName: The name of the tag it should be.\n    /// - Throws: If an I/O error occurs, the closing tag is malformed, or the name of the closing tag is not correct.\n    ///\n    private func handleClosingTag(tagName: String) throws {\n        var buffer: [Character] = []\n        guard try inputStream.read(chars: &buffer, maxLength: 3) == 3 else { throw SAXError.getUnexpectedEndOfInput() }\n\n        var ch = buffer.popLast()!\n        guard buffer == \"</\" else { throw SAXError.getMalformedDocument(markBackup(count: 3), description: \"Invalid closing tag.\") }\n        guard ch.isXmlNameStartChar else { throw unexpectedCharacterError(character: ch) }\n\n        buffer = [ ch ]\n        repeat {\n            ch = try readX()\n            guard ch.isXmlNameChar else {\n                while ch.isXmlWhitespace { ch = try readX() }\n                guard ch == \">\" else { throw unexpectedCharacterError(character: ch) }\n                guard String(buffer) == tagName else { throw SAXError.getMalformedDocument(markBackup(), description: \"Unexpected closing tag: \\\"\\(String(buffer))\\\" != \\\"\\(tagName)\\\"\") }\n                break\n            }\n            buffer <+ ch\n        } while true\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Handle a CDATA section.\n    ///\n    /// - Throws: If an I/O error occurs or the CDATA section is malformed.\n    ///\n    private func handleCDataSection() throws {\n        let openMarker:      String      = \"<![CDATA[\"\n        let openMarkerCount: Int         = openMarker.count\n        var buffer:          [Character] = []\n\n        guard try inputStream.read(chars: &buffer, maxLength: openMarkerCount) == openMarkerCount else { throw SAXError.getUnexpectedEndOfInput() }\n        guard buffer == openMarker else { throw SAXError.getMalformedCDATASection(markBackup(count: openMarkerCount), description: \"Not a CDATA Section starting tag: \\\"\\(String(buffer))\\\"\") }\n\n        buffer.removeAll()\n        while let ch = try inputStream.read() {\n            if ch == \">\" && buffer.last(count: 2) == \"]]\" {\n                buffer.removeLast(2)\n                handler.cdataSection(self, content: String(buffer))\n                return\n            }\n            buffer <+ ch\n        }\n        throw SAXError.getUnexpectedEndOfInput()\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Get an Unexpected Character message.\n    ///\n    /// - Parameter ch: The character that was unexpected.\n    /// - Returns: The message.\n    ///\n    @inlinable func unexpectedCharMessage(character ch: Character) -> String { \"Unexpected character: \\\"\\(ch)\\\"\" }\n\n    /*===========================================================================================================================================================================*/\n    /// Get an `Unexpected Character` error.\n    ///\n    /// - Parameter ch: The character that was unexpected.\n    /// - Returns: The error.\n    ///\n    @inlinable func unexpectedCharacterError(character ch: Character) -> SAXError { SAXError.getMalformedDocument(markBackup(), description: unexpectedCharMessage(character: ch)) }\n\n    /*===========================================================================================================================================================================*/\n    /// Get an `Unexpected Character` error.\n    ///\n    /// - Returns: The error.\n    ///\n    @inlinable func unexpectedCharacterError() -> SAXError {\n        do {\n            markBackup()\n            return unexpectedCharacterError(character: try readX())\n        }\n        catch {\n            return SAXError.getMalformedDocument(markBackup(), description: \"Unexpected Error\")\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Parse a processing instruction.\n    ///\n    /// - Throws: If there is an I/O error or the comment is malformed.\n    ///\n    private func handleProcessingInstruction() throws {\n        let pi = try readProcessingInstruction()\n        handler.processingInstruction(self, target: pi.target, data: pi.data)\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Read a processing instruction from the input stream.\n    ///\n    /// - Returns: A tuple containing the processing instruction target and data.\n    /// - Throws: If an I/O error occurs or the processing instruction is malformed.\n    ///\n    private func readProcessingInstruction() throws -> (target: String, data: String) {\n        var buffer: [Character] = []\n\n        guard try inputStream.read(chars: &buffer, maxLength: 3) == 3, buffer[0 ..< 2] == \"<?\" else { throw SAXError.getMalformedProcInst(markReset(), description: String(buffer)) }\n\n        while let ch = try inputStream.read() {\n            buffer <+ ch\n            if buffer.last(count: 2) == \"?>\" {\n                let pi = String(buffer)\n                let pt = \"^<\\\\?(\\(rxNamePattern))\\(rxWhitespacePattern)(.*?)\\\\?>$\"\n                guard let m = GetRegularExpression(pattern: pt).firstMatch(in: pi) else { throw SAXError.getMalformedProcInst(markReset(), description: pi) }\n                guard let t = m[1].subString, let d = m[2].subString else { throw SAXError.getMalformedProcInst(markReset(), description: pi) }\n                return (target: t, data: d)\n            }\n        }\n        throw SAXError.getUnexpectedEndOfInput()\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Parse a comment.\n    ///\n    /// - Throws: If there is an I/O error or the comment is malformed.\n    ///\n    private func handleComment() throws {\n        let dd:     [Character] = [ \"-\", \"-\" ]\n        var buffer: [Character] = []\n\n        guard try inputStream.read(chars: &buffer, maxLength: 4) == 4 else { throw SAXError.getUnexpectedEndOfInput() }\n        guard buffer == \"<!--\" else { throw SAXError.getMalformedComment(markReset(), description: \"Bad comment opening: \\\"\\(String(buffer))\\\"\") }\n\n        markUpdate()\n        guard try inputStream.read(chars: &buffer, maxLength: 3) == 3 else { throw SAXError.getUnexpectedEndOfInput() }\n\n        if buffer == \"-->\" {\n            // Handle an empty comment node.\n            markUpdate()\n            handler.comment(self, content: \"\")\n            return\n        }\n\n        guard buffer[0 ..< 2] == dd else { throw SAXError.getMalformedComment(markBackup(count: 2), description: \"Comment cannot contain double minus (-) signs.\") }\n\n        while let ch = try inputStream.read() {\n            if buffer.last(count: 2) == dd {\n                guard ch == \">\" else { throw SAXError.getMalformedComment(markBackup(count: 2), description: \"Comment cannot contain double minus (-) signs.\") }\n                handler.comment(self, content: String(buffer[buffer.startIndex ..< (buffer.endIndex - 2)]))\n                return\n            }\n            buffer <+ ch\n        }\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Parse the document's XML Declaration.\n    ///\n    /// - Throws: If an I/O error occured or the XML Declaration was malformed.\n    ///\n    private func getXmlDeclaration() throws {\n        markSet()\n        defer { markDelete() }\n\n        let pi = try _getXmlDeclaration()\n        if pi.bad { throw SAXError.getMalformedXmlDecl(markReset(), description: \"<?\\(pi.target) \\(pi.data)?>\") }\n    }\n\n    private func _getXmlDeclaration() throws -> (bad: Bool, target: String, data: String) {\n        do {\n            var bad: Bool = false\n            let pi        = try readProcessingInstruction()\n            guard pi.target.lowercased() == \"xml\" else { markReset(); return (bad, \"\", \"\") }\n\n            GetRegularExpression(pattern: \"\\\\s+(\\(rxNamePattern))=(?:'([^']*)'|\\\"([^\\\"]*)\\\")\").forEachMatch(in: \" \\(pi.data)\") { (m: RegularExpression.Match?, _, stop: inout Bool) in\n                if let m = m, let k = m[1].subString, let v = (m[2].subString ?? m[3].subString) {\n                    if _populateXmlDeclFields(key: k, value: v) {\n                        stop = true\n                        bad = true\n                    }\n                }\n            }\n\n            return (bad, pi.target, pi.data)\n        }\n        catch SAXError.UnexpectedEndOfInput(position: let pos, description: let description) {\n            throw SAXError.UnexpectedEndOfInput(position: pos, description: description)\n        }\n        catch {\n            return (false, \"\", \"\")\n        }\n    }\n\n    @inlinable final func _populateXmlDeclFields(key k: String, value v: String) -> Bool {\n        switch k {\n            case \"version\":\n                guard value(v, isOneOf: \"1.0\", \"1.1\") else { return true }\n                _xmlVersion = v\n            case \"encoding\":\n                // This is just for show. The encoding has already been determined.\n                _xmlEncoding = v\n            case \"standalone\":\n                let val = v.lowercased()\n                guard value(val, isOneOf: \"yes\", \"no\") else { return true }\n                _xmlIsStandalone = (val == \"yes\")\n            default:\n                return true\n        }\n        return false\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Read the next character from the input stream.\n    ///\n    /// - Returns: The next character\n    /// - Throws: If an I/O error occurs or if the EOF has been found.\n    ///\n    @inlinable final func readX(leadingWhitespace lws: LeadingWhitespace = .None) throws -> Character {\n        guard let ch = try read(leadingWhitespace: lws) else { throw SAXError.getUnexpectedEndOfInput() }\n        return ch\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Read the next character from the input stream.\n    ///\n    /// - Returns: The next character or `nil` if the EOF has been found.\n    /// - Throws: If an I/O error occurs.\n    ///\n    @inlinable final func read(leadingWhitespace lws: LeadingWhitespace = .None) throws -> Character? {\n        if lws != .None { try readWhitespace(isRequired: (lws == .Required)) }\n        return try inputStream.read()\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Mark Set\n    ///\n    @discardableResult @inlinable final func markSet() -> SAXCharInputStream { inputStream.markSet(); return inputStream }\n\n    /*===========================================================================================================================================================================*/\n    /// Mark Delete\n    ///\n    /// - Returns: The input stream.\n    ///\n    @discardableResult @inlinable final func markDelete() -> SAXCharInputStream { inputStream.markDelete(); return inputStream }\n\n    /*===========================================================================================================================================================================*/\n    /// Mark Return\n    ///\n    /// - Returns: The input stream.\n    ///\n    @discardableResult @inlinable final func markReturn() -> SAXCharInputStream { inputStream.markReturn(); return inputStream }\n\n    /*===========================================================================================================================================================================*/\n    /// Mark Reset\n    ///\n    /// - Returns: The input stream.\n    ///\n    @discardableResult @inlinable final func markReset() -> SAXCharInputStream { inputStream.markReset(); return inputStream }\n\n    /*===========================================================================================================================================================================*/\n    /// Mark Update\n    ///\n    /// - Returns: The input stream.\n    ///\n    @discardableResult @inlinable final func markUpdate() -> SAXCharInputStream { inputStream.markUpdate(); return inputStream }\n\n    /*===========================================================================================================================================================================*/\n    /// Mark Backup\n    ///\n    /// - Parameter count: The number of characters to back up.\n    /// - Returns: The number of characters actually backed up.\n    ///\n    @discardableResult @inlinable final func markBackup(count: Int = 1) -> SAXCharInputStream { inputStream.markBackup(count: count); return inputStream }\n\n    /*===========================================================================================================================================================================*/\n    /// Get and return the next character in the input stream only if it is one of the allowed characters.\n    ///\n    /// - Parameters:\n    ///   - errorOnEOF: If `true` then an error will be thrown if the EOF is found. The default is `false`.\n    ///   - chars: The allowed characters.\n    /// - Returns: The character or `nil` if the next character would not have been one of the allowed characters or if `errorOnEOF` is `true` and there was no next character.\n    /// - Throws: If there was an I/O error or `errorOnEOF` is `true` and the EOF was found.\n    ///\n    @discardableResult @inlinable final func getChar(errorOnEOF: Bool = false, leadingWhitespace lws: LeadingWhitespace = .None, allowed chars: Character...) throws -> Character? {\n        try getChar(errorOnEOF: errorOnEOF, leadingWhitespace: lws) { chars.contains($0) }\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Get and return the next character in the input stream only if it passes the test.\n    ///\n    /// - Parameters:\n    ///   - errorOnEOF: If `true` then an error will be thrown if the EOF is found. The default is `false`.\n    ///   - test: The closure used to test the character.\n    /// - Returns: The character or `nil` if the character did not pass the test.\n    /// - Throws: If an I/O error occurs.\n    ///\n    @discardableResult @inlinable final func getChar(errorOnEOF: Bool = false, leadingWhitespace lws: LeadingWhitespace = .None, test: (Character) throws -> Bool) throws -> Character? {\n        if lws != .None { try readWhitespace(isRequired: (lws == .Required)) }\n        guard let ch = try inputStream.peek() else {\n            if errorOnEOF { throw SAXError.getUnexpectedEndOfInput() }\n            return nil\n        }\n        guard try test(ch) else { return nil }\n        return try inputStream.read()\n    }\n\n    @inlinable final func readSystemID(leadingWhitespace lws: LeadingWhitespace = .Required) throws -> URL {\n        guard let ur = try nextQuotedValue(leadingWhitespace: lws) else { throw SAXError.getMalformedDocType(markReset(), description: \"Missing System ID\") }\n        return try GetURL(string: ur)\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Read and return any whitespace characters that are next in the input stream.\n    ///\n    /// - Parameter isRequired: If `true` then at least one whitespace character is required.\n    /// - Returns: A string containing the whitespace characters. May be an empty string.\n    /// - Throws: If an I/O error occurs or `isRequired` is `true` and no whitespace characters were found.\n    ///\n    @discardableResult @usableFromInline func readWhitespace(isRequired f: Bool = false) throws -> Bool {\n        markUpdate()\n        if let ch = try inputStream.read() {\n            // We got at least one character.\n            if ch.isXmlWhitespace {\n                // We got at least one whitespace character.\n                while let ch = try inputStream.read(), ch.isXmlWhitespace {}\n                markBackup()\n                return true\n            }\n            markBackup()\n            if f { throw SAXError.getMissingWhitespace(markBackup()) }\n        }\n        return false\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Read the next identifier from the input stream. An identifer starts with an XML Name Start Char and then zero or more XML Name Chars.\n    ///\n    /// - Returns: The identifier or `nil` if there is no identifier.\n    /// - Throws: If an I/O error occurs.\n    ///\n    @usableFromInline func nextIdentifier(leadingWhitespace lws: LeadingWhitespace = .Allowed) throws -> String? {\n        if lws != .None { try readWhitespace(isRequired: (lws == .Required)) }\n        markUpdate()\n        guard let ch1 = try inputStream.read(), ch1.isXmlNameStartChar else { markBackup(); return nil }\n        var buffer: [Character] = [ ch1 ]\n\n        while let ch2 = try inputStream.read() {\n            guard ch2.isXmlNameChar else { markBackup(); break }\n            buffer <+ ch2\n        }\n\n        return String(buffer)\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Read the next quoted value from the input stream.\n    ///\n    /// - Returns: The value without the quotes.\n    /// - Throws: If an I/O error occurs or if the EOF is found before the closing quote.\n    ///\n    @usableFromInline func nextQuotedValue(leadingWhitespace lws: LeadingWhitespace = .None) throws -> String? {\n        guard let quote = try getChar(leadingWhitespace: lws, allowed: \"\\\"\", \"'\") else { return nil }\n        var buffer: [Character] = []\n\n        while let ch = try inputStream.read() {\n            if ch == quote { return String(buffer) }\n            else if ch == \"&\" { buffer.append(contentsOf: try readEntityChar()) }\n            else { buffer <+ ch }\n        }\n\n        throw SAXError.getUnexpectedEndOfInput()\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Read the next parameter. A parameter consists of an identifier and a quoted value separated by an equals sign (=).\n    ///\n    /// - Returns: An instance of KVPair or `nil` if there is no parameter.\n    /// - Throws: If an I/O error occurs or if the EOF is found before the closing quote on the parameter quoted value.\n    ///\n    @usableFromInline func nextParameter(leadingWhitespace lws: LeadingWhitespace = .Allowed) throws -> KVPair? {\n        guard let key = try nextIdentifier(leadingWhitespace: lws) else { return nil }\n        let ch = try inputStream.read()\n        guard ch == \"=\" else { return nil }\n        guard let value = try nextQuotedValue() else { return nil }\n        return KVPair(key: key, value: value)\n    }\n\n    /*===========================================================================================================================================================================*/\n    /// Complete an entity character by reading the name from the input stream and returning it's character value.\n    ///\n    /// - Returns: The entity character.\n    /// - Throws: If an I/O error occurs.\n    ///\n    @usableFromInline func readEntityChar() throws -> String {\n        markSet()\n        defer { markDelete() }\n\n        var buffer: [Character] = []\n\n        while let ch = try inputStream.read() {\n            if ch == \";\" {\n                switch String(buffer) {\n                    case \"quot\": return \"\\\"\"\n                    case \"lt\":   return \"<\"\n                    case \"gt\":   return \">\"\n                    case \"apos\": return \"'\"\n                    case \"amp\":  return \"&\"\n                  // TODO: Handle DTD defined character entities.\n                    default:     markReset(); return \"&\"\n                }\n            }\n            buffer <+ ch\n        }\n\n        markReset()\n        return \"&\"\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sources/Gettysburg/SAXParser.swift b/Sources/Gettysburg/SAXParser.swift
--- a/Sources/Gettysburg/SAXParser.swift	
+++ b/Sources/Gettysburg/SAXParser.swift	
@@ -140,6 +140,8 @@
         guard try String(buffer).matches(pattern: "^\\<\\!DOCTYPE\\s+") else { throw SAXError.getMalformedDocType(markReset(), description: "Not a DOCTYPE element: \"\(String(buffer))\"") }
         guard let elem = try nextIdentifier(leadingWhitespace: .Allowed) else { throw SAXError.getMalformedDocType(markReset(), description: "Missing root element.") }
         guard let ch = try read(leadingWhitespace: .Required) else { throw SAXError.getUnexpectedEndOfInput() }
+        let pos = inputStream.position
+        nDebug(.None, "Position: \(posstr(pos))")
         switch ch {
             case "[": try handleInternalDocType(rootElement: elem)
             case "S": markBackup(); try handleExternalSystemDocType(rootElement: elem)
